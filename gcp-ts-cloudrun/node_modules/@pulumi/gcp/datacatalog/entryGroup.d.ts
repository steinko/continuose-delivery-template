import * as pulumi from "@pulumi/pulumi";
/**
 * An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.
 *
 * To get more information about EntryGroup, see:
 *
 * * [API documentation](https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/data-catalog/docs)
 *
 * ## Example Usage
 * ### Data Catalog Entry Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicEntryGroup = new gcp.datacatalog.EntryGroup("basic_entry_group", {
 *     entryGroupId: "my_group",
 * });
 * ```
 * ### Data Catalog Entry Group Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicEntryGroup = new gcp.datacatalog.EntryGroup("basic_entry_group", {
 *     description: "example entry group",
 *     displayName: "entry group",
 *     entryGroupId: "my_group",
 * });
 * ```
 *
 * ## Import
 *
 * EntryGroup can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:datacatalog/entryGroup:EntryGroup default {{name}}
 * ```
 */
export declare class EntryGroup extends pulumi.CustomResource {
    /**
     * Get an existing EntryGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntryGroupState, opts?: pulumi.CustomResourceOptions): EntryGroup;
    /**
     * Returns true if the given object is an instance of EntryGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EntryGroup;
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    readonly entryGroupId: pulumi.Output<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * EntryGroup location region.
     */
    readonly region: pulumi.Output<string>;
    /**
     * Create a EntryGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EntryGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EntryGroup resources.
 */
export interface EntryGroupState {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    readonly entryGroupId?: pulumi.Input<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    readonly region?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EntryGroup resource.
 */
export interface EntryGroupArgs {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    readonly entryGroupId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    readonly region?: pulumi.Input<string>;
}
