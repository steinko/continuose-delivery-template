import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A Google Cloud Redis instance.
 *
 * To get more information about Instance, see:
 *
 * * [API documentation](https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/memorystore/docs/redis/)
 *
 * ## Example Usage
 * ### Redis Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cache = new gcp.redis.Instance("cache", {
 *     memorySizeGb: 1,
 * });
 * ```
 * ### Redis Instance Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const redis-network = gcp.compute.getNetwork({
 *     name: "redis-test-network",
 * });
 * const cache = new gcp.redis.Instance("cache", {
 *     tier: "STANDARD_HA",
 *     memorySizeGb: 1,
 *     locationId: "us-central1-a",
 *     alternativeLocationId: "us-central1-f",
 *     authorizedNetwork: redis_network.then(redis_network => redis_network.id),
 *     redisVersion: "REDIS_4_0",
 *     displayName: "Test Instance",
 *     reservedIpRange: "192.168.0.0/29",
 *     labels: {
 *         my_key: "my_val",
 *         other_key: "other_val",
 *     },
 * });
 * ```
 * ### Redis Instance Private Service
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const redis-network = gcp.compute.getNetwork({
 *     name: "redis-test-network",
 * });
 * const serviceRange = new gcp.compute.GlobalAddress("serviceRange", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: redis_network.then(redis_network => redis_network.id),
 * });
 * const privateServiceConnection = new gcp.servicenetworking.Connection("privateServiceConnection", {
 *     network: redis_network.then(redis_network => redis_network.id),
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [serviceRange.name],
 * });
 * const cache = new gcp.redis.Instance("cache", {
 *     tier: "STANDARD_HA",
 *     memorySizeGb: 1,
 *     locationId: "us-central1-a",
 *     alternativeLocationId: "us-central1-f",
 *     authorizedNetwork: redis_network.then(redis_network => redis_network.id),
 *     connectMode: "PRIVATE_SERVICE_ACCESS",
 *     redisVersion: "REDIS_4_0",
 *     displayName: "Test Instance",
 * }, {
 *     dependsOn: [privateServiceConnection],
 * });
 * ```
 *
 * ## Import
 *
 * Instance can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:redis/instance:Instance default projects/{{project}}/locations/{{region}}/instances/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:redis/instance:Instance default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:redis/instance:Instance default {{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:redis/instance:Instance default {{name}}
 * ```
 */
export declare class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance;
    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Instance;
    /**
     * Only applicable to STANDARD_HA tier which protects the instance
     * against zonal failures by provisioning it across two zones.
     * If provided, it must be a different zone from the one provided in
     * [locationId].
     */
    readonly alternativeLocationId: pulumi.Output<string>;
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the
     * instance. If set to "true" AUTH is enabled on the instance.
     * Default value is "false" meaning AUTH is disabled.
     */
    readonly authEnabled: pulumi.Output<boolean | undefined>;
    /**
     * AUTH String set on the instance. This field will only be populated if authEnabled is true.
     */
    readonly authString: pulumi.Output<string>;
    /**
     * The full name of the Google Compute Engine network to which the
     * instance is connected. If left unspecified, the default network
     * will be used.
     */
    readonly authorizedNetwork: pulumi.Output<string>;
    /**
     * The connection mode of the Redis instance.
     * Default value is `DIRECT_PEERING`.
     * Possible values are `DIRECT_PEERING` and `PRIVATE_SERVICE_ACCESS`.
     */
    readonly connectMode: pulumi.Output<string | undefined>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
     * [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
     * [alternativeLocationId] and can change after a failover event.
     */
    readonly currentLocationId: pulumi.Output<string>;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
     */
    readonly host: pulumi.Output<string>;
    /**
     * Resource labels to represent user provided metadata.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The zone where the instance will be provisioned. If not provided,
     * the service will choose a zone for the instance. For STANDARD_HA tier,
     * instances will be created across two zones for protection against
     * zonal failures. If [alternativeLocationId] is also provided, it must
     * be different from [locationId].
     */
    readonly locationId: pulumi.Output<string>;
    /**
     * Redis memory size in GiB.
     */
    readonly memorySizeGb: pulumi.Output<number>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
     * "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
     * operation.
     */
    readonly persistenceIamIdentity: pulumi.Output<string>;
    /**
     * The port number of the exposed Redis endpoint.
     */
    readonly port: pulumi.Output<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Redis configuration parameters, according to http://redis.io/topics/config.
     * Please check Memorystore documentation for the list of supported parameters:
     * https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
     */
    readonly redisConfigs: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The version of Redis software. If not provided, latest supported
     * version will be used. Currently, the supported values are:
     * - REDIS_5_0 for Redis 5.0 compatibility
     * - REDIS_4_0 for Redis 4.0 compatibility
     * - REDIS_3_2 for Redis 3.2 compatibility
     */
    readonly redisVersion: pulumi.Output<string>;
    /**
     * The name of the Redis region of the instance.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The CIDR range of internal addresses that are reserved for this
     * instance. If not provided, the service will choose an unused /29
     * block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
     * unique and non-overlapping with existing subnets in an authorized
     * network.
     */
    readonly reservedIpRange: pulumi.Output<string>;
    /**
     * List of server CA certificates for the instance.
     */
    readonly serverCaCerts: pulumi.Output<outputs.redis.InstanceServerCaCert[]>;
    /**
     * The service tier of the instance. Must be one of these values:
     * - BASIC: standalone instance
     * - STANDARD_HA: highly available primary/replica instances
     * Default value is `BASIC`.
     * Possible values are `BASIC` and `STANDARD_HA`.
     */
    readonly tier: pulumi.Output<string | undefined>;
    /**
     * The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
     * - SERVER_AUTHENTICATION: Client to Server traffic encryption enabled with server authentcation
     * Default value is `DISABLED`.
     * Possible values are `SERVER_AUTHENTICATION` and `DISABLED`.
     */
    readonly transitEncryptionMode: pulumi.Output<string | undefined>;
    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Only applicable to STANDARD_HA tier which protects the instance
     * against zonal failures by provisioning it across two zones.
     * If provided, it must be a different zone from the one provided in
     * [locationId].
     */
    readonly alternativeLocationId?: pulumi.Input<string>;
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the
     * instance. If set to "true" AUTH is enabled on the instance.
     * Default value is "false" meaning AUTH is disabled.
     */
    readonly authEnabled?: pulumi.Input<boolean>;
    /**
     * AUTH String set on the instance. This field will only be populated if authEnabled is true.
     */
    readonly authString?: pulumi.Input<string>;
    /**
     * The full name of the Google Compute Engine network to which the
     * instance is connected. If left unspecified, the default network
     * will be used.
     */
    readonly authorizedNetwork?: pulumi.Input<string>;
    /**
     * The connection mode of the Redis instance.
     * Default value is `DIRECT_PEERING`.
     * Possible values are `DIRECT_PEERING` and `PRIVATE_SERVICE_ACCESS`.
     */
    readonly connectMode?: pulumi.Input<string>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
     * [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
     * [alternativeLocationId] and can change after a failover event.
     */
    readonly currentLocationId?: pulumi.Input<string>;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
     */
    readonly host?: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The zone where the instance will be provisioned. If not provided,
     * the service will choose a zone for the instance. For STANDARD_HA tier,
     * instances will be created across two zones for protection against
     * zonal failures. If [alternativeLocationId] is also provided, it must
     * be different from [locationId].
     */
    readonly locationId?: pulumi.Input<string>;
    /**
     * Redis memory size in GiB.
     */
    readonly memorySizeGb?: pulumi.Input<number>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
     * "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
     * operation.
     */
    readonly persistenceIamIdentity?: pulumi.Input<string>;
    /**
     * The port number of the exposed Redis endpoint.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Redis configuration parameters, according to http://redis.io/topics/config.
     * Please check Memorystore documentation for the list of supported parameters:
     * https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
     */
    readonly redisConfigs?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version of Redis software. If not provided, latest supported
     * version will be used. Currently, the supported values are:
     * - REDIS_5_0 for Redis 5.0 compatibility
     * - REDIS_4_0 for Redis 4.0 compatibility
     * - REDIS_3_2 for Redis 3.2 compatibility
     */
    readonly redisVersion?: pulumi.Input<string>;
    /**
     * The name of the Redis region of the instance.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The CIDR range of internal addresses that are reserved for this
     * instance. If not provided, the service will choose an unused /29
     * block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
     * unique and non-overlapping with existing subnets in an authorized
     * network.
     */
    readonly reservedIpRange?: pulumi.Input<string>;
    /**
     * List of server CA certificates for the instance.
     */
    readonly serverCaCerts?: pulumi.Input<pulumi.Input<inputs.redis.InstanceServerCaCert>[]>;
    /**
     * The service tier of the instance. Must be one of these values:
     * - BASIC: standalone instance
     * - STANDARD_HA: highly available primary/replica instances
     * Default value is `BASIC`.
     * Possible values are `BASIC` and `STANDARD_HA`.
     */
    readonly tier?: pulumi.Input<string>;
    /**
     * The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
     * - SERVER_AUTHENTICATION: Client to Server traffic encryption enabled with server authentcation
     * Default value is `DISABLED`.
     * Possible values are `SERVER_AUTHENTICATION` and `DISABLED`.
     */
    readonly transitEncryptionMode?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Only applicable to STANDARD_HA tier which protects the instance
     * against zonal failures by provisioning it across two zones.
     * If provided, it must be a different zone from the one provided in
     * [locationId].
     */
    readonly alternativeLocationId?: pulumi.Input<string>;
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the
     * instance. If set to "true" AUTH is enabled on the instance.
     * Default value is "false" meaning AUTH is disabled.
     */
    readonly authEnabled?: pulumi.Input<boolean>;
    /**
     * The full name of the Google Compute Engine network to which the
     * instance is connected. If left unspecified, the default network
     * will be used.
     */
    readonly authorizedNetwork?: pulumi.Input<string>;
    /**
     * The connection mode of the Redis instance.
     * Default value is `DIRECT_PEERING`.
     * Possible values are `DIRECT_PEERING` and `PRIVATE_SERVICE_ACCESS`.
     */
    readonly connectMode?: pulumi.Input<string>;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The zone where the instance will be provisioned. If not provided,
     * the service will choose a zone for the instance. For STANDARD_HA tier,
     * instances will be created across two zones for protection against
     * zonal failures. If [alternativeLocationId] is also provided, it must
     * be different from [locationId].
     */
    readonly locationId?: pulumi.Input<string>;
    /**
     * Redis memory size in GiB.
     */
    readonly memorySizeGb: pulumi.Input<number>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Redis configuration parameters, according to http://redis.io/topics/config.
     * Please check Memorystore documentation for the list of supported parameters:
     * https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
     */
    readonly redisConfigs?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The version of Redis software. If not provided, latest supported
     * version will be used. Currently, the supported values are:
     * - REDIS_5_0 for Redis 5.0 compatibility
     * - REDIS_4_0 for Redis 4.0 compatibility
     * - REDIS_3_2 for Redis 3.2 compatibility
     */
    readonly redisVersion?: pulumi.Input<string>;
    /**
     * The name of the Redis region of the instance.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The CIDR range of internal addresses that are reserved for this
     * instance. If not provided, the service will choose an unused /29
     * block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
     * unique and non-overlapping with existing subnets in an authorized
     * network.
     */
    readonly reservedIpRange?: pulumi.Input<string>;
    /**
     * The service tier of the instance. Must be one of these values:
     * - BASIC: standalone instance
     * - STANDARD_HA: highly available primary/replica instances
     * Default value is `BASIC`.
     * Possible values are `BASIC` and `STANDARD_HA`.
     */
    readonly tier?: pulumi.Input<string>;
    /**
     * The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
     * - SERVER_AUTHENTICATION: Client to Server traffic encryption enabled with server authentcation
     * Default value is `DISABLED`.
     * Possible values are `SERVER_AUTHENTICATION` and `DISABLED`.
     */
    readonly transitEncryptionMode?: pulumi.Input<string>;
}
