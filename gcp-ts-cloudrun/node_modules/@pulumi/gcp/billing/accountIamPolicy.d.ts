import * as pulumi from "@pulumi/pulumi";
export declare class AccountIamPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AccountIamPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountIamPolicyState, opts?: pulumi.CustomResourceOptions): AccountIamPolicy;
    /**
     * Returns true if the given object is an instance of AccountIamPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccountIamPolicy;
    readonly billingAccountId: pulumi.Output<string>;
    readonly etag: pulumi.Output<string>;
    readonly policyData: pulumi.Output<string>;
    /**
     * Create a AccountIamPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountIamPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccountIamPolicy resources.
 */
export interface AccountIamPolicyState {
    readonly billingAccountId?: pulumi.Input<string>;
    readonly etag?: pulumi.Input<string>;
    readonly policyData?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccountIamPolicy resource.
 */
export interface AccountIamPolicyArgs {
    readonly billingAccountId: pulumi.Input<string>;
    readonly policyData: pulumi.Input<string>;
}
