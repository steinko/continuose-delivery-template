"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Allows creation and management of a Google Cloud Billing Subaccount.
 *
 * !> **WARNING:** Deleting this resource will not delete or close the billing subaccount.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const subaccount = new gcp.billing.SubAccount("subaccount", {
 *     displayName: "My Billing Account",
 *     masterBillingAccount: "012345-567890-ABCDEF",
 * });
 * ```
 *
 * ## Import
 *
 * Billing Subaccounts can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:billing/subAccount:SubAccount default billingAccounts/{billing_account_id}
 * ```
 */
class SubAccount extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["billingAccountId"] = state ? state.billingAccountId : undefined;
            inputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["masterBillingAccount"] = state ? state.masterBillingAccount : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["open"] = state ? state.open : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.masterBillingAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterBillingAccount'");
            }
            inputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["masterBillingAccount"] = args ? args.masterBillingAccount : undefined;
            inputs["billingAccountId"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["open"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(SubAccount.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SubAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SubAccount(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SubAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubAccount.__pulumiType;
    }
}
exports.SubAccount = SubAccount;
/** @internal */
SubAccount.__pulumiType = 'gcp:billing/subAccount:SubAccount';
//# sourceMappingURL=subAccount.js.map