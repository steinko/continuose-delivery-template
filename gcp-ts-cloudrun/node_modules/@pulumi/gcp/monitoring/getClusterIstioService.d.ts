import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * A Monitoring Service is the root resource under which operational aspects of a
 * generic service are accessible. A service is some discrete, autonomous, and
 * network-accessible unit, designed to solve an individual concern
 *
 * An Cluster Istio monitoring service is automatically created by GCP to monitor
 * Cluster Istio services.
 *
 * To get more information about Service, see:
 *
 * * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
 * * How-to Guides
 *     * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
 *     * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)
 *
 * ## Example Usage
 * ### Monitoring Cluster Istio Service
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * // Monitors the default ClusterIstio service
 * const defaultClusterIstioService = pulumi.output(gcp.monitoring.getClusterIstioService({
 *     clusterName: "west",
 *     location: "us-west2-a",
 *     serviceName: "istio-policy",
 *     serviceNamespace: "istio-system",
 * }, { async: true }));
 * ```
 */
export declare function getClusterIstioService(args: GetClusterIstioServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterIstioServiceResult>;
/**
 * A collection of arguments for invoking getClusterIstioService.
 */
export interface GetClusterIstioServiceArgs {
    /**
     * The name of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the clusterName resource label in k8sCluster resources.
     */
    readonly clusterName: string;
    /**
     * The location of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the location resource label in k8sCluster resources.
     */
    readonly location: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The name of the Istio service underlying this service.
     * Corresponds to the destinationServiceName metric label in Istio metrics.
     */
    readonly serviceName: string;
    /**
     * The namespace of the Istio service underlying this service.
     * Corresponds to the destinationServiceNamespace metric label in Istio metrics.
     */
    readonly serviceNamespace: string;
}
/**
 * A collection of values returned by getClusterIstioService.
 */
export interface GetClusterIstioServiceResult {
    readonly clusterName: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly serviceId: string;
    readonly serviceName: string;
    readonly serviceNamespace: string;
    readonly telemetries: outputs.monitoring.GetClusterIstioServiceTelemetry[];
}
