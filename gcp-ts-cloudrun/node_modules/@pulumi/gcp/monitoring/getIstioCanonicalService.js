"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A Monitoring Service is the root resource under which operational aspects of a
 * generic service are accessible. A service is some discrete, autonomous, and
 * network-accessible unit, designed to solve an individual concern
 *
 * A monitoring Istio Canonical Service is automatically created by GCP to monitor
 * Istio Canonical Services.
 *
 * To get more information about Service, see:
 *
 * * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
 * * How-to Guides
 *     * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
 *     * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)
 *
 * ## Example Usage
 * ### Monitoring Istio Canonical Service
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * // Monitors the default MeshIstio service
 * const defaultIstioCanonicalService = pulumi.output(gcp.monitoring.getIstioCanonicalService({
 *     canonicalService: "prometheus",
 *     canonicalServiceNamespace: "istio-system",
 *     meshUid: "proj-573164786102",
 * }, { async: true }));
 * ```
 */
function getIstioCanonicalService(args, opts) {
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:monitoring/getIstioCanonicalService:getIstioCanonicalService", {
        "canonicalService": args.canonicalService,
        "canonicalServiceNamespace": args.canonicalServiceNamespace,
        "meshUid": args.meshUid,
        "project": args.project,
    }, opts);
}
exports.getIstioCanonicalService = getIstioCanonicalService;
//# sourceMappingURL=getIstioCanonicalService.js.map