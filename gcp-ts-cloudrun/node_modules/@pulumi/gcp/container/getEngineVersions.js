"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides access to available Google Kubernetes Engine versions in a zone or region for a given project.
 *
 * > If you are using the `gcp.container.getEngineVersions` datasource with a
 * regional cluster, ensure that you have provided a region as the `location` to
 * the datasource. A region can have a different set of supported versions than
 * its component zones, and not all zones in a region are guaranteed to
 * support the same version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const central1b = gcp.container.getEngineVersions({
 *     location: "us-central1-b",
 *     versionPrefix: "1.12.",
 * });
 * const foo = new gcp.container.Cluster("foo", {
 *     location: "us-central1-b",
 *     nodeVersion: central1b.then(central1b => central1b.latestNodeVersion),
 *     initialNodeCount: 1,
 *     masterAuth: {
 *         username: "mr.yoda",
 *         password: "adoy.rm",
 *     },
 * });
 * export const stableChannelVersion = central1b.then(central1b => central1b.releaseChannelDefaultVersion.STABLE);
 * ```
 */
function getEngineVersions(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:container/getEngineVersions:getEngineVersions", {
        "location": args.location,
        "project": args.project,
        "versionPrefix": args.versionPrefix,
    }, opts);
}
exports.getEngineVersions = getEngineVersions;
//# sourceMappingURL=getEngineVersions.js.map