"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./authority"));
__export(require("./authorityIamBinding"));
__export(require("./authorityIamMember"));
__export(require("./authorityIamPolicy"));
__export(require("./certificate"));
// Import resources to register:
const authority_1 = require("./authority");
const authorityIamBinding_1 = require("./authorityIamBinding");
const authorityIamMember_1 = require("./authorityIamMember");
const authorityIamPolicy_1 = require("./authorityIamPolicy");
const certificate_1 = require("./certificate");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:certificateauthority/authority:Authority":
                return new authority_1.Authority(name, undefined, { urn });
            case "gcp:certificateauthority/authorityIamBinding:AuthorityIamBinding":
                return new authorityIamBinding_1.AuthorityIamBinding(name, undefined, { urn });
            case "gcp:certificateauthority/authorityIamMember:AuthorityIamMember":
                return new authorityIamMember_1.AuthorityIamMember(name, undefined, { urn });
            case "gcp:certificateauthority/authorityIamPolicy:AuthorityIamPolicy":
                return new authorityIamPolicy_1.AuthorityIamPolicy(name, undefined, { urn });
            case "gcp:certificateauthority/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authority", _module);
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authorityIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authorityIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authorityIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificate", _module);
//# sourceMappingURL=index.js.map