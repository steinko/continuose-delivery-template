import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A managed metastore service that serves metadata queries.
 *
 * ## Example Usage
 * ### Dataproc Metastore Service Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.dataproc.MetastoreService("default", {
 *     serviceId: "metastore-srv",
 *     location: "us-central1",
 *     port: 9080,
 *     tier: "DEVELOPER",
 *     maintenanceWindow: {
 *         hourOfDay: 2,
 *         dayOfWeek: "SUNDAY",
 *     },
 *     hiveMetastoreConfig: {
 *         version: "2.3.6",
 *     },
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * Service can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:dataproc/metastoreService:MetastoreService default projects/{{project}}/locations/{{location}}/services/{{service_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dataproc/metastoreService:MetastoreService default {{project}}/{{location}}/{{service_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dataproc/metastoreService:MetastoreService default {{location}}/{{service_id}}
 * ```
 */
export declare class MetastoreService extends pulumi.CustomResource {
    /**
     * Get an existing MetastoreService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetastoreServiceState, opts?: pulumi.CustomResourceOptions): MetastoreService;
    /**
     * Returns true if the given object is an instance of MetastoreService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MetastoreService;
    /**
     * A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
     */
    readonly artifactGcsUri: pulumi.Output<string>;
    /**
     * The URI of the endpoint used to access the metastore service.
     */
    readonly endpointUri: pulumi.Output<string>;
    /**
     * Configuration information specific to running Hive metastore software as the metastore service.
     * Structure is documented below.
     */
    readonly hiveMetastoreConfig: pulumi.Output<outputs.dataproc.MetastoreServiceHiveMetastoreConfig | undefined>;
    /**
     * User-defined labels for the metastore service.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The  location where the autoscaling policy should reside.
     * The default value is `global`.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The one hour maintenance window of the metastore service.
     * This specifies when the service can be restarted for maintenance purposes in UTC time.
     * Structure is documented below.
     */
    readonly maintenanceWindow: pulumi.Output<outputs.dataproc.MetastoreServiceMaintenanceWindow | undefined>;
    /**
     * The relative resource name of the metastore service.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
     * "projects/{projectNumber}/global/networks/{network_id}".
     */
    readonly network: pulumi.Output<string>;
    /**
     * The TCP port at which the metastore service is reached. Default: 9083.
     */
    readonly port: pulumi.Output<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The ID of the metastore service. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 63 characters.
     */
    readonly serviceId: pulumi.Output<string>;
    /**
     * The current state of the metastore service.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Additional information about the current state of the metastore service, if available.
     */
    readonly stateMessage: pulumi.Output<string>;
    /**
     * The tier of the service.
     * Possible values are `DEVELOPER` and `ENTERPRISE`.
     */
    readonly tier: pulumi.Output<string>;
    /**
     * Create a MetastoreService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetastoreServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MetastoreService resources.
 */
export interface MetastoreServiceState {
    /**
     * A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
     */
    readonly artifactGcsUri?: pulumi.Input<string>;
    /**
     * The URI of the endpoint used to access the metastore service.
     */
    readonly endpointUri?: pulumi.Input<string>;
    /**
     * Configuration information specific to running Hive metastore software as the metastore service.
     * Structure is documented below.
     */
    readonly hiveMetastoreConfig?: pulumi.Input<inputs.dataproc.MetastoreServiceHiveMetastoreConfig>;
    /**
     * User-defined labels for the metastore service.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The  location where the autoscaling policy should reside.
     * The default value is `global`.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The one hour maintenance window of the metastore service.
     * This specifies when the service can be restarted for maintenance purposes in UTC time.
     * Structure is documented below.
     */
    readonly maintenanceWindow?: pulumi.Input<inputs.dataproc.MetastoreServiceMaintenanceWindow>;
    /**
     * The relative resource name of the metastore service.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
     * "projects/{projectNumber}/global/networks/{network_id}".
     */
    readonly network?: pulumi.Input<string>;
    /**
     * The TCP port at which the metastore service is reached. Default: 9083.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The ID of the metastore service. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 63 characters.
     */
    readonly serviceId?: pulumi.Input<string>;
    /**
     * The current state of the metastore service.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * Additional information about the current state of the metastore service, if available.
     */
    readonly stateMessage?: pulumi.Input<string>;
    /**
     * The tier of the service.
     * Possible values are `DEVELOPER` and `ENTERPRISE`.
     */
    readonly tier?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MetastoreService resource.
 */
export interface MetastoreServiceArgs {
    /**
     * Configuration information specific to running Hive metastore software as the metastore service.
     * Structure is documented below.
     */
    readonly hiveMetastoreConfig?: pulumi.Input<inputs.dataproc.MetastoreServiceHiveMetastoreConfig>;
    /**
     * User-defined labels for the metastore service.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The  location where the autoscaling policy should reside.
     * The default value is `global`.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The one hour maintenance window of the metastore service.
     * This specifies when the service can be restarted for maintenance purposes in UTC time.
     * Structure is documented below.
     */
    readonly maintenanceWindow?: pulumi.Input<inputs.dataproc.MetastoreServiceMaintenanceWindow>;
    /**
     * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
     * "projects/{projectNumber}/global/networks/{network_id}".
     */
    readonly network?: pulumi.Input<string>;
    /**
     * The TCP port at which the metastore service is reached. Default: 9083.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The ID of the metastore service. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 63 characters.
     */
    readonly serviceId: pulumi.Input<string>;
    /**
     * The tier of the service.
     * Possible values are `DEVELOPER` and `ENTERPRISE`.
     */
    readonly tier?: pulumi.Input<string>;
}
