import * as pulumi from "@pulumi/pulumi";
/**
 * OIDC IdP configuration for a Identity Toolkit project within a tenant.
 *
 * You must enable the
 * [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
 * the marketplace prior to using this resource.
 *
 * ## Example Usage
 * ### Identity Platform Tenant Oauth Idp Config Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const tenant = new gcp.identityplatform.Tenant("tenant", {displayName: "tenant"});
 * const tenantOauthIdpConfig = new gcp.identityplatform.TenantOauthIdpConfig("tenantOauthIdpConfig", {
 *     tenant: tenant.name,
 *     displayName: "Display Name",
 *     clientId: "client-id",
 *     issuer: "issuer",
 *     enabled: true,
 *     clientSecret: "secret",
 * });
 * ```
 *
 * ## Import
 *
 * TenantOauthIdpConfig can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig default projects/{{project}}/tenants/{{tenant}}/oauthIdpConfigs/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig default {{project}}/{{tenant}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/tenantOauthIdpConfig:TenantOauthIdpConfig default {{tenant}}/{{name}}
 * ```
 */
export declare class TenantOauthIdpConfig extends pulumi.CustomResource {
    /**
     * Get an existing TenantOauthIdpConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantOauthIdpConfigState, opts?: pulumi.CustomResourceOptions): TenantOauthIdpConfig;
    /**
     * Returns true if the given object is an instance of TenantOauthIdpConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TenantOauthIdpConfig;
    /**
     * The client id of an OAuth client.
     */
    readonly clientId: pulumi.Output<string>;
    /**
     * The client secret of the OAuth client, to enable OIDC code flow.
     */
    readonly clientSecret: pulumi.Output<string | undefined>;
    /**
     * Human friendly display name.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * If this config allows users to sign in with the provider.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * For OIDC Idps, the issuer identifier.
     */
    readonly issuer: pulumi.Output<string>;
    /**
     * The name of the OauthIdpConfig. Must start with `oidc.`.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The name of the tenant where this OIDC IDP configuration resource exists
     */
    readonly tenant: pulumi.Output<string>;
    /**
     * Create a TenantOauthIdpConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TenantOauthIdpConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TenantOauthIdpConfig resources.
 */
export interface TenantOauthIdpConfigState {
    /**
     * The client id of an OAuth client.
     */
    readonly clientId?: pulumi.Input<string>;
    /**
     * The client secret of the OAuth client, to enable OIDC code flow.
     */
    readonly clientSecret?: pulumi.Input<string>;
    /**
     * Human friendly display name.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * If this config allows users to sign in with the provider.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * For OIDC Idps, the issuer identifier.
     */
    readonly issuer?: pulumi.Input<string>;
    /**
     * The name of the OauthIdpConfig. Must start with `oidc.`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The name of the tenant where this OIDC IDP configuration resource exists
     */
    readonly tenant?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TenantOauthIdpConfig resource.
 */
export interface TenantOauthIdpConfigArgs {
    /**
     * The client id of an OAuth client.
     */
    readonly clientId: pulumi.Input<string>;
    /**
     * The client secret of the OAuth client, to enable OIDC code flow.
     */
    readonly clientSecret?: pulumi.Input<string>;
    /**
     * Human friendly display name.
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * If this config allows users to sign in with the provider.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * For OIDC Idps, the issuer identifier.
     */
    readonly issuer: pulumi.Input<string>;
    /**
     * The name of the OauthIdpConfig. Must start with `oidc.`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The name of the tenant where this OIDC IDP configuration resource exists
     */
    readonly tenant: pulumi.Input<string>;
}
