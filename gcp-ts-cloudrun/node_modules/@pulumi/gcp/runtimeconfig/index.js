"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./config"));
__export(require("./configIamBinding"));
__export(require("./configIamMember"));
__export(require("./configIamPolicy"));
__export(require("./getConfig"));
__export(require("./getVariable"));
__export(require("./variable"));
// Import resources to register:
const config_1 = require("./config");
const configIamBinding_1 = require("./configIamBinding");
const configIamMember_1 = require("./configIamMember");
const configIamPolicy_1 = require("./configIamPolicy");
const variable_1 = require("./variable");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:runtimeconfig/config:Config":
                return new config_1.Config(name, undefined, { urn });
            case "gcp:runtimeconfig/configIamBinding:ConfigIamBinding":
                return new configIamBinding_1.ConfigIamBinding(name, undefined, { urn });
            case "gcp:runtimeconfig/configIamMember:ConfigIamMember":
                return new configIamMember_1.ConfigIamMember(name, undefined, { urn });
            case "gcp:runtimeconfig/configIamPolicy:ConfigIamPolicy":
                return new configIamPolicy_1.ConfigIamPolicy(name, undefined, { urn });
            case "gcp:runtimeconfig/variable:Variable":
                return new variable_1.Variable(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "runtimeconfig/config", _module);
pulumi.runtime.registerResourceModule("gcp", "runtimeconfig/configIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "runtimeconfig/configIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "runtimeconfig/configIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "runtimeconfig/variable", _module);
//# sourceMappingURL=index.js.map