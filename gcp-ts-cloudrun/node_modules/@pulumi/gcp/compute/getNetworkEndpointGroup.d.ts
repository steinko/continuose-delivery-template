import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to access a Network Endpoint Group's attributes.
 *
 * The NEG may be found by providing either a `selfLink`, or a `name` and a `zone`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const neg1 = pulumi.output(gcp.compute.getNetworkEndpointGroup({
 *     name: "k8s1-abcdef01-myns-mysvc-8080-4b6bac43",
 *     zone: "us-central1-a",
 * }, { async: true }));
 * const neg2 = pulumi.output(gcp.compute.getNetworkEndpointGroup({
 *     selfLink: "https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43",
 * }, { async: true }));
 * ```
 */
export declare function getNetworkEndpointGroup(args?: GetNetworkEndpointGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkEndpointGroupResult>;
/**
 * A collection of arguments for invoking getNetworkEndpointGroup.
 */
export interface GetNetworkEndpointGroupArgs {
    /**
     * The Network Endpoint Group name.
     * Provide either this or a `selfLink`.
     */
    readonly name?: string;
    /**
     * The ID of the project to list versions in.
     * If it is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The Network Endpoint Group self\_link.
     */
    readonly selfLink?: string;
    /**
     * The Network Endpoint Group availability zone.
     */
    readonly zone?: string;
}
/**
 * A collection of values returned by getNetworkEndpointGroup.
 */
export interface GetNetworkEndpointGroupResult {
    /**
     * The NEG default port.
     */
    readonly defaultPort: number;
    /**
     * The NEG description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    /**
     * The network to which all network endpoints in the NEG belong.
     */
    readonly network: string;
    /**
     * Type of network endpoints in this network endpoint group.
     */
    readonly networkEndpointType: string;
    readonly project?: string;
    readonly selfLink?: string;
    /**
     * Number of network endpoints in the network endpoint group.
     */
    readonly size: number;
    /**
     * subnetwork to which all network endpoints in the NEG belong.
     */
    readonly subnetwork: string;
    readonly zone?: string;
}
