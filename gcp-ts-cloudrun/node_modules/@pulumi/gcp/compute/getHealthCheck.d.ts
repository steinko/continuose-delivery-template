import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Get information about a HealthCheck.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const healthChceck = pulumi.output(gcp.compute.getHealthCheck({
 *     name: "my-hc",
 * }, { async: true }));
 * ```
 */
export declare function getHealthCheck(args: GetHealthCheckArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthCheckResult>;
/**
 * A collection of arguments for invoking getHealthCheck.
 */
export interface GetHealthCheckArgs {
    /**
     * Name of the resource.
     */
    readonly name: string;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: string;
}
/**
 * A collection of values returned by getHealthCheck.
 */
export interface GetHealthCheckResult {
    readonly checkIntervalSec: number;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly grpcHealthChecks: outputs.compute.GetHealthCheckGrpcHealthCheck[];
    readonly healthyThreshold: number;
    readonly http2HealthChecks: outputs.compute.GetHealthCheckHttp2HealthCheck[];
    readonly httpHealthChecks: outputs.compute.GetHealthCheckHttpHealthCheck[];
    readonly httpsHealthChecks: outputs.compute.GetHealthCheckHttpsHealthCheck[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logConfigs: outputs.compute.GetHealthCheckLogConfig[];
    readonly name: string;
    readonly project?: string;
    readonly selfLink: string;
    readonly sslHealthChecks: outputs.compute.GetHealthCheckSslHealthCheck[];
    readonly tcpHealthChecks: outputs.compute.GetHealthCheckTcpHealthCheck[];
    readonly timeoutSec: number;
    readonly type: string;
    readonly unhealthyThreshold: number;
}
