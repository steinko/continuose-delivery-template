"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Provides access to available Google Compute zones in a region for a given project.
 * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * export = async () => {
 *     const available = await gcp.compute.getZones({});
 *     const foo: gcp.compute.InstanceGroupManager[];
 *     for (const range = {value: 0}; range.value < available.names.length; range.value++) {
 *         foo.push(new gcp.compute.InstanceGroupManager(`foo-${range.value}`, {
 *             instanceTemplate: google_compute_instance_template.foobar.self_link,
 *             baseInstanceName: `foobar-${range.value}`,
 *             zone: available.names[range.value],
 *             targetSize: 1,
 *         }));
 *     }
 * }
 * ```
 */
function getZones(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:compute/getZones:getZones", {
        "project": args.project,
        "region": args.region,
        "status": args.status,
    }, opts);
}
exports.getZones = getZones;
//# sourceMappingURL=getZones.js.map