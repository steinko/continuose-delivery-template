import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Get a router within GCE from its name and VPC.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_router = pulumi.output(gcp.compute.getRouter({
 *     name: "myrouter-us-east1",
 *     network: "my-network",
 * }, { async: true }));
 * ```
 */
export declare function getRouter(args: GetRouterArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterResult>;
/**
 * A collection of arguments for invoking getRouter.
 */
export interface GetRouterArgs {
    /**
     * The name of the router.
     */
    readonly name: string;
    /**
     * The VPC network on which this router lives.
     */
    readonly network: string;
    /**
     * The ID of the project in which the resource
     * belongs. If it is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The region this router has been created in. If
     * unspecified, this defaults to the region configured in the provider.
     */
    readonly region?: string;
}
/**
 * A collection of values returned by getRouter.
 */
export interface GetRouterResult {
    readonly bgps: outputs.compute.GetRouterBgp[];
    readonly creationTimestamp: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly network: string;
    readonly project?: string;
    readonly region?: string;
    readonly selfLink: string;
}
