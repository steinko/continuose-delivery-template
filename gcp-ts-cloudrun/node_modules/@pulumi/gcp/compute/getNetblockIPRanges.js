"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
 *
 * ## Example Usage
 * ### Cloud Ranges
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const netblock = gcp.compute.getNetblockIPRanges({});
 * export const cidrBlocks = netblock.then(netblock => netblock.cidrBlocks);
 * export const cidrBlocksIpv4 = netblock.then(netblock => netblock.cidrBlocksIpv4s);
 * export const cidrBlocksIpv6 = netblock.then(netblock => netblock.cidrBlocksIpv6s);
 * ```
 * ### Allow Health Checks
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const legacy-hcs = gcp.compute.getNetblockIPRanges({
 *     rangeType: "legacy-health-checkers",
 * });
 * const _default = new gcp.compute.Network("default", {});
 * const allow_hcs = new gcp.compute.Firewall("allow-hcs", {
 *     network: _default.name,
 *     allows: [{
 *         protocol: "tcp",
 *         ports: ["80"],
 *     }],
 *     sourceRanges: legacy_hcs.then(legacy_hcs => legacy_hcs.cidrBlocksIpv4s),
 * });
 * ```
 */
function getNetblockIPRanges(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:compute/getNetblockIPRanges:getNetblockIPRanges", {
        "rangeType": args.rangeType,
    }, opts);
}
exports.getNetblockIPRanges = getNetblockIPRanges;
//# sourceMappingURL=getNetblockIPRanges.js.map