"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A key for signing Cloud CDN signed URLs for BackendBuckets.
 *
 * To get more information about BackendBucketSignedUrlKey, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/backendBuckets)
 * * How-to Guides
 *     * [Using Signed URLs](https://cloud.google.com/cdn/docs/using-signed-urls/)
 *
 * > **Warning:** All arguments including `keyValue` will be stored in the raw
 * state as plain-text.
 *
 * ## Example Usage
 * ### Backend Bucket Signed Url Key
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as random from "@pulumi/random";
 *
 * const urlSignature = new random.RandomId("urlSignature", {byteLength: 16});
 * const bucket = new gcp.storage.Bucket("bucket", {location: "EU"});
 * const testBackend = new gcp.compute.BackendBucket("testBackend", {
 *     description: "Contains beautiful images",
 *     bucketName: bucket.name,
 *     enableCdn: true,
 * });
 * const backendKey = new gcp.compute.BackendBucketSignedUrlKey("backendKey", {
 *     keyValue: urlSignature.b64Url,
 *     backendBucket: testBackend.name,
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
class BackendBucketSignedUrlKey extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["backendBucket"] = state ? state.backendBucket : undefined;
            inputs["keyValue"] = state ? state.keyValue : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.backendBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backendBucket'");
            }
            if ((!args || args.keyValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyValue'");
            }
            inputs["backendBucket"] = args ? args.backendBucket : undefined;
            inputs["keyValue"] = args ? args.keyValue : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(BackendBucketSignedUrlKey.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing BackendBucketSignedUrlKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BackendBucketSignedUrlKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BackendBucketSignedUrlKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackendBucketSignedUrlKey.__pulumiType;
    }
}
exports.BackendBucketSignedUrlKey = BackendBucketSignedUrlKey;
/** @internal */
BackendBucketSignedUrlKey.__pulumiType = 'gcp:compute/backendBucketSignedUrlKey:BackendBucketSignedUrlKey';
//# sourceMappingURL=backendBucketSignedUrlKey.js.map