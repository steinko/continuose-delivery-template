import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Get a HA VPN Gateway within GCE from its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const gateway = pulumi.output(gcp.compute.getHcVpnGateway({
 *     name: "foobar",
 * }, { async: true }));
 * ```
 */
export declare function getHcVpnGateway(args: GetHcVpnGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetHcVpnGatewayResult>;
/**
 * A collection of arguments for invoking getHcVpnGateway.
 */
export interface GetHcVpnGatewayArgs {
    /**
     * The name of the forwarding rule.
     */
    readonly name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The region in which the resource belongs. If it
     * is not provided, the project region is used.
     */
    readonly region?: string;
}
/**
 * A collection of values returned by getHcVpnGateway.
 */
export interface GetHcVpnGatewayResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly network: string;
    readonly project?: string;
    readonly region?: string;
    readonly selfLink: string;
    readonly vpnInterfaces: outputs.compute.GetHcVpnGatewayVpnInterface[];
}
