import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * @deprecated gcp.compute.MangedSslCertificate has been deprecated in favor of gcp.compute.ManagedSslCertificate
 */
export declare class MangedSslCertificate extends pulumi.CustomResource {
    /**
     * Get an existing MangedSslCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MangedSslCertificateState, opts?: pulumi.CustomResourceOptions): MangedSslCertificate;
    /**
     * Returns true if the given object is an instance of MangedSslCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MangedSslCertificate;
    /**
     * The unique identifier for the resource.
     */
    readonly certificateId: pulumi.Output<number>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp: pulumi.Output<string>;
    /**
     * An optional description of this resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Expire time of the certificate.
     */
    readonly expireTime: pulumi.Output<string>;
    /**
     * Properties relevant to a managed certificate. These will be used if the certificate is managed (as indicated by a value
     * of 'MANAGED' in 'type').
     */
    readonly managed: pulumi.Output<outputs.compute.MangedSslCertificateManaged | undefined>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
     * must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. These are in the same
     * namespace as the managed SSL certificates.
     */
    readonly name: pulumi.Output<string>;
    readonly project: pulumi.Output<string>;
    readonly selfLink: pulumi.Output<string>;
    /**
     * Domains associated with the certificate via Subject Alternative Name.
     */
    readonly subjectAlternativeNames: pulumi.Output<string[]>;
    /**
     * Enum field whose value is always 'MANAGED' - used to signal to the API which type this is. Default value: "MANAGED"
     * Possible values: ["MANAGED"]
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * Create a MangedSslCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated gcp.compute.MangedSslCertificate has been deprecated in favor of gcp.compute.ManagedSslCertificate */
    constructor(name: string, args?: MangedSslCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MangedSslCertificate resources.
 */
export interface MangedSslCertificateState {
    /**
     * The unique identifier for the resource.
     */
    readonly certificateId?: pulumi.Input<number>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Expire time of the certificate.
     */
    readonly expireTime?: pulumi.Input<string>;
    /**
     * Properties relevant to a managed certificate. These will be used if the certificate is managed (as indicated by a value
     * of 'MANAGED' in 'type').
     */
    readonly managed?: pulumi.Input<inputs.compute.MangedSslCertificateManaged>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
     * must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. These are in the same
     * namespace as the managed SSL certificates.
     */
    readonly name?: pulumi.Input<string>;
    readonly project?: pulumi.Input<string>;
    readonly selfLink?: pulumi.Input<string>;
    /**
     * Domains associated with the certificate via Subject Alternative Name.
     */
    readonly subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enum field whose value is always 'MANAGED' - used to signal to the API which type this is. Default value: "MANAGED"
     * Possible values: ["MANAGED"]
     */
    readonly type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MangedSslCertificate resource.
 */
export interface MangedSslCertificateArgs {
    /**
     * The unique identifier for the resource.
     */
    readonly certificateId?: pulumi.Input<number>;
    /**
     * An optional description of this resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Properties relevant to a managed certificate. These will be used if the certificate is managed (as indicated by a value
     * of 'MANAGED' in 'type').
     */
    readonly managed?: pulumi.Input<inputs.compute.MangedSslCertificateManaged>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
     * must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. These are in the same
     * namespace as the managed SSL certificates.
     */
    readonly name?: pulumi.Input<string>;
    readonly project?: pulumi.Input<string>;
    /**
     * Enum field whose value is always 'MANAGED' - used to signal to the API which type this is. Default value: "MANAGED"
     * Possible values: ["MANAGED"]
     */
    readonly type?: pulumi.Input<string>;
}
