import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A Google Cloud IoT Core device.
 *
 * To get more information about Device, see:
 *
 * * [API documentation](https://cloud.google.com/iot/docs/reference/cloudiot/rest/)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/iot/docs/)
 *
 * ## Example Usage
 * ### Cloudiot Device Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const registry = new gcp.iot.Registry("registry", {});
 * const test_device = new gcp.iot.Device("test-device", {registry: registry.id});
 * ```
 * ### Cloudiot Device Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * from "fs";
 *
 * const registry = new gcp.iot.Registry("registry", {});
 * const test_device = new gcp.iot.Device("test-device", {
 *     registry: registry.id,
 *     credentials: [{
 *         publicKey: {
 *             format: "RSA_PEM",
 *             key: fs.readFileSync("test-fixtures/rsa_public.pem"),
 *         },
 *     }],
 *     blocked: false,
 *     logLevel: "INFO",
 *     metadata: {
 *         test_key_1: "test_value_1",
 *     },
 *     gatewayConfig: {
 *         gatewayType: "NON_GATEWAY",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Device can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:iot/device:Device default {{registry}}/devices/{{name}}
 * ```
 */
export declare class Device extends pulumi.CustomResource {
    /**
     * Get an existing Device resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceState, opts?: pulumi.CustomResourceOptions): Device;
    /**
     * Returns true if the given object is an instance of Device.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Device;
    /**
     * If a device is blocked, connections or requests from this device will fail.
     */
    readonly blocked: pulumi.Output<boolean | undefined>;
    /**
     * The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     */
    readonly configs: pulumi.Output<outputs.iot.DeviceConfig[]>;
    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     */
    readonly credentials: pulumi.Output<outputs.iot.DeviceCredential[] | undefined>;
    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     */
    readonly gatewayConfig: pulumi.Output<outputs.iot.DeviceGatewayConfig | undefined>;
    /**
     * The last time a cloud-to-device config version acknowledgment was received from the device.
     */
    readonly lastConfigAckTime: pulumi.Output<string>;
    /**
     * The last time a cloud-to-device config version was sent to the device.
     */
    readonly lastConfigSendTime: pulumi.Output<string>;
    /**
     * The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     */
    readonly lastErrorStatuses: pulumi.Output<outputs.iot.DeviceLastErrorStatus[]>;
    /**
     * The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     */
    readonly lastErrorTime: pulumi.Output<string>;
    /**
     * The last time a telemetry event was received.
     */
    readonly lastEventTime: pulumi.Output<string>;
    /**
     * The last time an MQTT PINGREQ was received.
     */
    readonly lastHeartbeatTime: pulumi.Output<string>;
    /**
     * The last time a state event was received.
     */
    readonly lastStateTime: pulumi.Output<string>;
    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     */
    readonly logLevel: pulumi.Output<string | undefined>;
    /**
     * The metadata key-value pairs assigned to the device.
     */
    readonly metadata: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A unique name for the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     */
    readonly numId: pulumi.Output<string>;
    /**
     * The name of the device registry where this device should be created.
     */
    readonly registry: pulumi.Output<string>;
    /**
     * The state most recently received from the device.
     */
    readonly states: pulumi.Output<outputs.iot.DeviceState[]>;
    /**
     * Create a Device resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Device resources.
 */
export interface DeviceState {
    /**
     * If a device is blocked, connections or requests from this device will fail.
     */
    readonly blocked?: pulumi.Input<boolean>;
    /**
     * The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     */
    readonly configs?: pulumi.Input<pulumi.Input<inputs.iot.DeviceConfig>[]>;
    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     */
    readonly credentials?: pulumi.Input<pulumi.Input<inputs.iot.DeviceCredential>[]>;
    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     */
    readonly gatewayConfig?: pulumi.Input<inputs.iot.DeviceGatewayConfig>;
    /**
     * The last time a cloud-to-device config version acknowledgment was received from the device.
     */
    readonly lastConfigAckTime?: pulumi.Input<string>;
    /**
     * The last time a cloud-to-device config version was sent to the device.
     */
    readonly lastConfigSendTime?: pulumi.Input<string>;
    /**
     * The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     */
    readonly lastErrorStatuses?: pulumi.Input<pulumi.Input<inputs.iot.DeviceLastErrorStatus>[]>;
    /**
     * The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     */
    readonly lastErrorTime?: pulumi.Input<string>;
    /**
     * The last time a telemetry event was received.
     */
    readonly lastEventTime?: pulumi.Input<string>;
    /**
     * The last time an MQTT PINGREQ was received.
     */
    readonly lastHeartbeatTime?: pulumi.Input<string>;
    /**
     * The last time a state event was received.
     */
    readonly lastStateTime?: pulumi.Input<string>;
    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     */
    readonly logLevel?: pulumi.Input<string>;
    /**
     * The metadata key-value pairs assigned to the device.
     */
    readonly metadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A unique name for the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     */
    readonly numId?: pulumi.Input<string>;
    /**
     * The name of the device registry where this device should be created.
     */
    readonly registry?: pulumi.Input<string>;
    /**
     * The state most recently received from the device.
     */
    readonly states?: pulumi.Input<pulumi.Input<inputs.iot.DeviceState>[]>;
}
/**
 * The set of arguments for constructing a Device resource.
 */
export interface DeviceArgs {
    /**
     * If a device is blocked, connections or requests from this device will fail.
     */
    readonly blocked?: pulumi.Input<boolean>;
    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     */
    readonly credentials?: pulumi.Input<pulumi.Input<inputs.iot.DeviceCredential>[]>;
    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     */
    readonly gatewayConfig?: pulumi.Input<inputs.iot.DeviceGatewayConfig>;
    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     */
    readonly logLevel?: pulumi.Input<string>;
    /**
     * The metadata key-value pairs assigned to the device.
     */
    readonly metadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A unique name for the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the device registry where this device should be created.
     */
    readonly registry: pulumi.Input<string>;
}
