"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Rules to match an HTTP request and dispatch that request to a service.
 *
 * To get more information about ApplicationUrlDispatchRules, see:
 *
 * * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps#UrlDispatchRule)
 *
 * ## Example Usage
 * ### App Engine Application Url Dispatch Rules Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const bucket = new gcp.storage.Bucket("bucket", {});
 * const object = new gcp.storage.BucketObject("object", {
 *     bucket: bucket.name,
 *     source: new pulumi.asset.FileAsset("./test-fixtures/appengine/hello-world.zip"),
 * });
 * const adminV3 = new gcp.appengine.StandardAppVersion("adminV3", {
 *     versionId: "v3",
 *     service: "admin",
 *     runtime: "nodejs10",
 *     entrypoint: {
 *         shell: "node ./app.js",
 *     },
 *     deployment: {
 *         zip: {
 *             sourceUrl: pulumi.interpolate`https://storage.googleapis.com/${bucket.name}/${object.name}`,
 *         },
 *     },
 *     envVariables: {
 *         port: "8080",
 *     },
 *     noopOnDestroy: true,
 * });
 * const webService = new gcp.appengine.ApplicationUrlDispatchRules("webService", {dispatchRules: [
 *     {
 *         domain: "*",
 *         path: "/*",
 *         service: "default",
 *     },
 *     {
 *         domain: "*",
 *         path: "/admin/*",
 *         service: adminV3.service,
 *     },
 * ]});
 * ```
 *
 * ## Import
 *
 * ApplicationUrlDispatchRules can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:appengine/applicationUrlDispatchRules:ApplicationUrlDispatchRules default {{project}}
 * ```
 */
class ApplicationUrlDispatchRules extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["dispatchRules"] = state ? state.dispatchRules : undefined;
            inputs["project"] = state ? state.project : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.dispatchRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dispatchRules'");
            }
            inputs["dispatchRules"] = args ? args.dispatchRules : undefined;
            inputs["project"] = args ? args.project : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(ApplicationUrlDispatchRules.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ApplicationUrlDispatchRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApplicationUrlDispatchRules(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApplicationUrlDispatchRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationUrlDispatchRules.__pulumiType;
    }
}
exports.ApplicationUrlDispatchRules = ApplicationUrlDispatchRules;
/** @internal */
ApplicationUrlDispatchRules.__pulumiType = 'gcp:appengine/applicationUrlDispatchRules:ApplicationUrlDispatchRules';
//# sourceMappingURL=applicationUrlDispatchRules.js.map