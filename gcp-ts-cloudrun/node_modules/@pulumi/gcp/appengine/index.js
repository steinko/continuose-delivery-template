"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./application"));
__export(require("./applicationUrlDispatchRules"));
__export(require("./domainMapping"));
__export(require("./engineSplitTraffic"));
__export(require("./firewallRule"));
__export(require("./flexibleAppVersion"));
__export(require("./getDefaultServiceAccount"));
__export(require("./standardAppVersion"));
// Import resources to register:
const application_1 = require("./application");
const applicationUrlDispatchRules_1 = require("./applicationUrlDispatchRules");
const domainMapping_1 = require("./domainMapping");
const engineSplitTraffic_1 = require("./engineSplitTraffic");
const firewallRule_1 = require("./firewallRule");
const flexibleAppVersion_1 = require("./flexibleAppVersion");
const standardAppVersion_1 = require("./standardAppVersion");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:appengine/application:Application":
                return new application_1.Application(name, undefined, { urn });
            case "gcp:appengine/applicationUrlDispatchRules:ApplicationUrlDispatchRules":
                return new applicationUrlDispatchRules_1.ApplicationUrlDispatchRules(name, undefined, { urn });
            case "gcp:appengine/domainMapping:DomainMapping":
                return new domainMapping_1.DomainMapping(name, undefined, { urn });
            case "gcp:appengine/engineSplitTraffic:EngineSplitTraffic":
                return new engineSplitTraffic_1.EngineSplitTraffic(name, undefined, { urn });
            case "gcp:appengine/firewallRule:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "gcp:appengine/flexibleAppVersion:FlexibleAppVersion":
                return new flexibleAppVersion_1.FlexibleAppVersion(name, undefined, { urn });
            case "gcp:appengine/standardAppVersion:StandardAppVersion":
                return new standardAppVersion_1.StandardAppVersion(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "appengine/application", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/applicationUrlDispatchRules", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/domainMapping", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/engineSplitTraffic", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/firewallRule", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/flexibleAppVersion", _module);
pulumi.runtime.registerResourceModule("gcp", "appengine/standardAppVersion", _module);
//# sourceMappingURL=index.js.map