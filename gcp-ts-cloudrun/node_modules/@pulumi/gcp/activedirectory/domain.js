"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates a Microsoft AD domain
 *
 * To get more information about Domain, see:
 *
 * * [API documentation](https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains)
 * * How-to Guides
 *     * [Managed Microsoft Active Directory Quickstart](https://cloud.google.com/managed-microsoft-ad/docs/quickstarts)
 *
 * ## Example Usage
 * ### Active Directory Domain Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const ad_domain = new gcp.activedirectory.Domain("ad-domain", {
 *     domainName: "tfgen.org.com",
 *     locations: ["us-central1"],
 *     reservedIpRange: "192.168.255.0/24",
 * });
 * ```
 *
 * ## Import
 *
 * Domain can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:activedirectory/domain:Domain default {{name}}
 * ```
 */
class Domain extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["admin"] = state ? state.admin : undefined;
            inputs["authorizedNetworks"] = state ? state.authorizedNetworks : undefined;
            inputs["domainName"] = state ? state.domainName : undefined;
            inputs["fqdn"] = state ? state.fqdn : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["locations"] = state ? state.locations : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["reservedIpRange"] = state ? state.reservedIpRange : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.locations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locations'");
            }
            if ((!args || args.reservedIpRange === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservedIpRange'");
            }
            inputs["admin"] = args ? args.admin : undefined;
            inputs["authorizedNetworks"] = args ? args.authorizedNetworks : undefined;
            inputs["domainName"] = args ? args.domainName : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["reservedIpRange"] = args ? args.reservedIpRange : undefined;
            inputs["fqdn"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Domain.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Domain(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }
}
exports.Domain = Domain;
/** @internal */
Domain.__pulumiType = 'gcp:activedirectory/domain:Domain';
//# sourceMappingURL=domain.js.map