import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A named resource to which messages are sent by publishers.
 *
 * > **Warning:** This resource requires an App Engine application to be created on the
 * project you're provisioning it on. If you haven't already enabled it, you
 * can create a `gcp.appengine.Application` resource to do so. This
 * resource's location will be the same as the App Engine location specified.
 *
 * ## Example Usage
 * ### Queue Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultQueue = new gcp.cloudtasks.Queue("default", {
 *     location: "us-central1",
 * });
 * ```
 * ### Cloud Tasks Queue Advanced
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const advancedConfiguration = new gcp.cloudtasks.Queue("advanced_configuration", {
 *     appEngineRoutingOverride: {
 *         instance: "test",
 *         service: "worker",
 *         version: "1.0",
 *     },
 *     location: "us-central1",
 *     rateLimits: {
 *         maxConcurrentDispatches: 3,
 *         maxDispatchesPerSecond: 2,
 *     },
 *     retryConfig: {
 *         maxAttempts: 5,
 *         maxBackoff: "3s",
 *         maxDoublings: 1,
 *         maxRetryDuration: "4s",
 *         minBackoff: "2s",
 *     },
 *     stackdriverLoggingConfig: {
 *         samplingRatio: 0.9,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Queue can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default projects/{{project}}/locations/{{location}}/queues/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:cloudtasks/queue:Queue default {{location}}/{{name}}
 * ```
 */
export declare class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QueueState, opts?: pulumi.CustomResourceOptions): Queue;
    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Queue;
    /**
     * Overrides for task-level appEngineRouting. These settings apply only
     * to App Engine tasks in this queue
     * Structure is documented below.
     */
    readonly appEngineRoutingOverride: pulumi.Output<outputs.cloudtasks.QueueAppEngineRoutingOverride | undefined>;
    /**
     * The location of the queue
     */
    readonly location: pulumi.Output<string>;
    /**
     * The queue name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Rate limits for task dispatches.
     * The queue's actual dispatch rate is the result of:
     * * Number of tasks in the queue
     * * User-specified throttling: rateLimits, retryConfig, and the queue's state.
     * * System throttling due to 429 (Too Many Requests) or 503 (Service
     * Unavailable) responses from the worker, high error rates, or to
     * smooth sudden large traffic spikes.
     * Structure is documented below.
     */
    readonly rateLimits: pulumi.Output<outputs.cloudtasks.QueueRateLimits>;
    /**
     * Settings that determine the retry behavior.
     * Structure is documented below.
     */
    readonly retryConfig: pulumi.Output<outputs.cloudtasks.QueueRetryConfig>;
    /**
     * Configuration options for writing logs to Stackdriver Logging.
     * Structure is documented below.
     */
    readonly stackdriverLoggingConfig: pulumi.Output<outputs.cloudtasks.QueueStackdriverLoggingConfig | undefined>;
    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Queue resources.
 */
export interface QueueState {
    /**
     * Overrides for task-level appEngineRouting. These settings apply only
     * to App Engine tasks in this queue
     * Structure is documented below.
     */
    readonly appEngineRoutingOverride?: pulumi.Input<inputs.cloudtasks.QueueAppEngineRoutingOverride>;
    /**
     * The location of the queue
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The queue name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Rate limits for task dispatches.
     * The queue's actual dispatch rate is the result of:
     * * Number of tasks in the queue
     * * User-specified throttling: rateLimits, retryConfig, and the queue's state.
     * * System throttling due to 429 (Too Many Requests) or 503 (Service
     * Unavailable) responses from the worker, high error rates, or to
     * smooth sudden large traffic spikes.
     * Structure is documented below.
     */
    readonly rateLimits?: pulumi.Input<inputs.cloudtasks.QueueRateLimits>;
    /**
     * Settings that determine the retry behavior.
     * Structure is documented below.
     */
    readonly retryConfig?: pulumi.Input<inputs.cloudtasks.QueueRetryConfig>;
    /**
     * Configuration options for writing logs to Stackdriver Logging.
     * Structure is documented below.
     */
    readonly stackdriverLoggingConfig?: pulumi.Input<inputs.cloudtasks.QueueStackdriverLoggingConfig>;
}
/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    /**
     * Overrides for task-level appEngineRouting. These settings apply only
     * to App Engine tasks in this queue
     * Structure is documented below.
     */
    readonly appEngineRoutingOverride?: pulumi.Input<inputs.cloudtasks.QueueAppEngineRoutingOverride>;
    /**
     * The location of the queue
     */
    readonly location: pulumi.Input<string>;
    /**
     * The queue name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Rate limits for task dispatches.
     * The queue's actual dispatch rate is the result of:
     * * Number of tasks in the queue
     * * User-specified throttling: rateLimits, retryConfig, and the queue's state.
     * * System throttling due to 429 (Too Many Requests) or 503 (Service
     * Unavailable) responses from the worker, high error rates, or to
     * smooth sudden large traffic spikes.
     * Structure is documented below.
     */
    readonly rateLimits?: pulumi.Input<inputs.cloudtasks.QueueRateLimits>;
    /**
     * Settings that determine the retry behavior.
     * Structure is documented below.
     */
    readonly retryConfig?: pulumi.Input<inputs.cloudtasks.QueueRetryConfig>;
    /**
     * Configuration options for writing logs to Stackdriver Logging.
     * Structure is documented below.
     */
    readonly stackdriverLoggingConfig?: pulumi.Input<inputs.cloudtasks.QueueStackdriverLoggingConfig>;
}
