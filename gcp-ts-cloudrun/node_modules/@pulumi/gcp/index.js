"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
// Export members:
__export(require("./provider"));
__export(require("./utils"));
// Export sub-modules:
const accesscontextmanager = require("./accesscontextmanager");
exports.accesscontextmanager = accesscontextmanager;
const activedirectory = require("./activedirectory");
exports.activedirectory = activedirectory;
const apigateway = require("./apigateway");
exports.apigateway = apigateway;
const apigee = require("./apigee");
exports.apigee = apigee;
const appengine = require("./appengine");
exports.appengine = appengine;
const artifactregistry = require("./artifactregistry");
exports.artifactregistry = artifactregistry;
const bigquery = require("./bigquery");
exports.bigquery = bigquery;
const bigtable = require("./bigtable");
exports.bigtable = bigtable;
const billing = require("./billing");
exports.billing = billing;
const binaryauthorization = require("./binaryauthorization");
exports.binaryauthorization = binaryauthorization;
const certificateauthority = require("./certificateauthority");
exports.certificateauthority = certificateauthority;
const cloudasset = require("./cloudasset");
exports.cloudasset = cloudasset;
const cloudbuild = require("./cloudbuild");
exports.cloudbuild = cloudbuild;
const cloudfunctions = require("./cloudfunctions");
exports.cloudfunctions = cloudfunctions;
const cloudidentity = require("./cloudidentity");
exports.cloudidentity = cloudidentity;
const cloudrun = require("./cloudrun");
exports.cloudrun = cloudrun;
const cloudscheduler = require("./cloudscheduler");
exports.cloudscheduler = cloudscheduler;
const cloudtasks = require("./cloudtasks");
exports.cloudtasks = cloudtasks;
const composer = require("./composer");
exports.composer = composer;
const compute = require("./compute");
exports.compute = compute;
const config = require("./config");
exports.config = config;
const container = require("./container");
exports.container = container;
const containeranalysis = require("./containeranalysis");
exports.containeranalysis = containeranalysis;
const datacatalog = require("./datacatalog");
exports.datacatalog = datacatalog;
const dataflow = require("./dataflow");
exports.dataflow = dataflow;
const datafusion = require("./datafusion");
exports.datafusion = datafusion;
const dataloss = require("./dataloss");
exports.dataloss = dataloss;
const dataproc = require("./dataproc");
exports.dataproc = dataproc;
const datastore = require("./datastore");
exports.datastore = datastore;
const deploymentmanager = require("./deploymentmanager");
exports.deploymentmanager = deploymentmanager;
const diagflow = require("./diagflow");
exports.diagflow = diagflow;
const dns = require("./dns");
exports.dns = dns;
const endpoints = require("./endpoints");
exports.endpoints = endpoints;
const essentialcontacts = require("./essentialcontacts");
exports.essentialcontacts = essentialcontacts;
const eventarc = require("./eventarc");
exports.eventarc = eventarc;
const filestore = require("./filestore");
exports.filestore = filestore;
const firebase = require("./firebase");
exports.firebase = firebase;
const firestore = require("./firestore");
exports.firestore = firestore;
const folder = require("./folder");
exports.folder = folder;
const gameservices = require("./gameservices");
exports.gameservices = gameservices;
const gkehub = require("./gkehub");
exports.gkehub = gkehub;
const healthcare = require("./healthcare");
exports.healthcare = healthcare;
const iam = require("./iam");
exports.iam = iam;
const iap = require("./iap");
exports.iap = iap;
const identityplatform = require("./identityplatform");
exports.identityplatform = identityplatform;
const iot = require("./iot");
exports.iot = iot;
const kms = require("./kms");
exports.kms = kms;
const logging = require("./logging");
exports.logging = logging;
const memcache = require("./memcache");
exports.memcache = memcache;
const ml = require("./ml");
exports.ml = ml;
const monitoring = require("./monitoring");
exports.monitoring = monitoring;
const networkmanagement = require("./networkmanagement");
exports.networkmanagement = networkmanagement;
const notebooks = require("./notebooks");
exports.notebooks = notebooks;
const organizations = require("./organizations");
exports.organizations = organizations;
const osconfig = require("./osconfig");
exports.osconfig = osconfig;
const oslogin = require("./oslogin");
exports.oslogin = oslogin;
const projects = require("./projects");
exports.projects = projects;
const pubsub = require("./pubsub");
exports.pubsub = pubsub;
const redis = require("./redis");
exports.redis = redis;
const resourcemanager = require("./resourcemanager");
exports.resourcemanager = resourcemanager;
const runtimeconfig = require("./runtimeconfig");
exports.runtimeconfig = runtimeconfig;
const secretmanager = require("./secretmanager");
exports.secretmanager = secretmanager;
const securitycenter = require("./securitycenter");
exports.securitycenter = securitycenter;
const serviceaccount = require("./serviceaccount");
exports.serviceaccount = serviceaccount;
const servicedirectory = require("./servicedirectory");
exports.servicedirectory = servicedirectory;
const servicenetworking = require("./servicenetworking");
exports.servicenetworking = servicenetworking;
const serviceusage = require("./serviceusage");
exports.serviceusage = serviceusage;
const sourcerepo = require("./sourcerepo");
exports.sourcerepo = sourcerepo;
const spanner = require("./spanner");
exports.spanner = spanner;
const sql = require("./sql");
exports.sql = sql;
const storage = require("./storage");
exports.storage = storage;
const tags = require("./tags");
exports.tags = tags;
const tpu = require("./tpu");
exports.tpu = tpu;
const types = require("./types");
exports.types = types;
const vpcaccess = require("./vpcaccess");
exports.vpcaccess = vpcaccess;
const workflows = require("./workflows");
exports.workflows = workflows;
const provider_1 = require("./provider");
pulumi.runtime.registerResourcePackage("gcp", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:gcp") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map