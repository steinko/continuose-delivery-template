"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./database"));
__export(require("./databaseIAMBinding"));
__export(require("./databaseIAMMember"));
__export(require("./databaseIAMPolicy"));
__export(require("./getInstance"));
__export(require("./instance"));
__export(require("./instanceIAMBinding"));
__export(require("./instanceIAMMember"));
__export(require("./instanceIAMPolicy"));
// Import resources to register:
const database_1 = require("./database");
const databaseIAMBinding_1 = require("./databaseIAMBinding");
const databaseIAMMember_1 = require("./databaseIAMMember");
const databaseIAMPolicy_1 = require("./databaseIAMPolicy");
const instance_1 = require("./instance");
const instanceIAMBinding_1 = require("./instanceIAMBinding");
const instanceIAMMember_1 = require("./instanceIAMMember");
const instanceIAMPolicy_1 = require("./instanceIAMPolicy");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:spanner/database:Database":
                return new database_1.Database(name, undefined, { urn });
            case "gcp:spanner/databaseIAMBinding:DatabaseIAMBinding":
                return new databaseIAMBinding_1.DatabaseIAMBinding(name, undefined, { urn });
            case "gcp:spanner/databaseIAMMember:DatabaseIAMMember":
                return new databaseIAMMember_1.DatabaseIAMMember(name, undefined, { urn });
            case "gcp:spanner/databaseIAMPolicy:DatabaseIAMPolicy":
                return new databaseIAMPolicy_1.DatabaseIAMPolicy(name, undefined, { urn });
            case "gcp:spanner/instance:Instance":
                return new instance_1.Instance(name, undefined, { urn });
            case "gcp:spanner/instanceIAMBinding:InstanceIAMBinding":
                return new instanceIAMBinding_1.InstanceIAMBinding(name, undefined, { urn });
            case "gcp:spanner/instanceIAMMember:InstanceIAMMember":
                return new instanceIAMMember_1.InstanceIAMMember(name, undefined, { urn });
            case "gcp:spanner/instanceIAMPolicy:InstanceIAMPolicy":
                return new instanceIAMPolicy_1.InstanceIAMPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "spanner/database", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instance", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMPolicy", _module);
//# sourceMappingURL=index.js.map