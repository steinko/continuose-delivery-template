"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./billingAccountBucketConfig"));
__export(require("./billingAccountExclusion"));
__export(require("./billingAccountSink"));
__export(require("./folderBucketConfig"));
__export(require("./folderExclusion"));
__export(require("./folderSink"));
__export(require("./metric"));
__export(require("./organizationBucketConfig"));
__export(require("./organizationExclusion"));
__export(require("./organizationSink"));
__export(require("./projectBucketConfig"));
__export(require("./projectExclusion"));
__export(require("./projectSink"));
// Import resources to register:
const billingAccountBucketConfig_1 = require("./billingAccountBucketConfig");
const billingAccountExclusion_1 = require("./billingAccountExclusion");
const billingAccountSink_1 = require("./billingAccountSink");
const folderBucketConfig_1 = require("./folderBucketConfig");
const folderExclusion_1 = require("./folderExclusion");
const folderSink_1 = require("./folderSink");
const metric_1 = require("./metric");
const organizationBucketConfig_1 = require("./organizationBucketConfig");
const organizationExclusion_1 = require("./organizationExclusion");
const organizationSink_1 = require("./organizationSink");
const projectBucketConfig_1 = require("./projectBucketConfig");
const projectExclusion_1 = require("./projectExclusion");
const projectSink_1 = require("./projectSink");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:logging/billingAccountBucketConfig:BillingAccountBucketConfig":
                return new billingAccountBucketConfig_1.BillingAccountBucketConfig(name, undefined, { urn });
            case "gcp:logging/billingAccountExclusion:BillingAccountExclusion":
                return new billingAccountExclusion_1.BillingAccountExclusion(name, undefined, { urn });
            case "gcp:logging/billingAccountSink:BillingAccountSink":
                return new billingAccountSink_1.BillingAccountSink(name, undefined, { urn });
            case "gcp:logging/folderBucketConfig:FolderBucketConfig":
                return new folderBucketConfig_1.FolderBucketConfig(name, undefined, { urn });
            case "gcp:logging/folderExclusion:FolderExclusion":
                return new folderExclusion_1.FolderExclusion(name, undefined, { urn });
            case "gcp:logging/folderSink:FolderSink":
                return new folderSink_1.FolderSink(name, undefined, { urn });
            case "gcp:logging/metric:Metric":
                return new metric_1.Metric(name, undefined, { urn });
            case "gcp:logging/organizationBucketConfig:OrganizationBucketConfig":
                return new organizationBucketConfig_1.OrganizationBucketConfig(name, undefined, { urn });
            case "gcp:logging/organizationExclusion:OrganizationExclusion":
                return new organizationExclusion_1.OrganizationExclusion(name, undefined, { urn });
            case "gcp:logging/organizationSink:OrganizationSink":
                return new organizationSink_1.OrganizationSink(name, undefined, { urn });
            case "gcp:logging/projectBucketConfig:ProjectBucketConfig":
                return new projectBucketConfig_1.ProjectBucketConfig(name, undefined, { urn });
            case "gcp:logging/projectExclusion:ProjectExclusion":
                return new projectExclusion_1.ProjectExclusion(name, undefined, { urn });
            case "gcp:logging/projectSink:ProjectSink":
                return new projectSink_1.ProjectSink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "logging/billingAccountBucketConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/billingAccountExclusion", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/billingAccountSink", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/folderBucketConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/folderExclusion", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/folderSink", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/metric", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/organizationBucketConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/organizationExclusion", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/organizationSink", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/projectBucketConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/projectExclusion", _module);
pulumi.runtime.registerResourceModule("gcp", "logging/projectSink", _module);
//# sourceMappingURL=index.js.map