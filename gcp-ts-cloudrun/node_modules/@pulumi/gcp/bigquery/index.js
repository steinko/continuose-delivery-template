"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./appProfile"));
__export(require("./connection"));
__export(require("./dataTransferConfig"));
__export(require("./dataset"));
__export(require("./datasetAccess"));
__export(require("./datasetIamBinding"));
__export(require("./datasetIamMember"));
__export(require("./datasetIamPolicy"));
__export(require("./getDefaultServiceAccount"));
__export(require("./iamBinding"));
__export(require("./iamMember"));
__export(require("./iamPolicy"));
__export(require("./job"));
__export(require("./reservation"));
__export(require("./routine"));
__export(require("./table"));
// Import resources to register:
const appProfile_1 = require("./appProfile");
const connection_1 = require("./connection");
const dataTransferConfig_1 = require("./dataTransferConfig");
const dataset_1 = require("./dataset");
const datasetAccess_1 = require("./datasetAccess");
const datasetIamBinding_1 = require("./datasetIamBinding");
const datasetIamMember_1 = require("./datasetIamMember");
const datasetIamPolicy_1 = require("./datasetIamPolicy");
const iamBinding_1 = require("./iamBinding");
const iamMember_1 = require("./iamMember");
const iamPolicy_1 = require("./iamPolicy");
const job_1 = require("./job");
const reservation_1 = require("./reservation");
const routine_1 = require("./routine");
const table_1 = require("./table");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:bigquery/appProfile:AppProfile":
                return new appProfile_1.AppProfile(name, undefined, { urn });
            case "gcp:bigquery/connection:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "gcp:bigquery/dataTransferConfig:DataTransferConfig":
                return new dataTransferConfig_1.DataTransferConfig(name, undefined, { urn });
            case "gcp:bigquery/dataset:Dataset":
                return new dataset_1.Dataset(name, undefined, { urn });
            case "gcp:bigquery/datasetAccess:DatasetAccess":
                return new datasetAccess_1.DatasetAccess(name, undefined, { urn });
            case "gcp:bigquery/datasetIamBinding:DatasetIamBinding":
                return new datasetIamBinding_1.DatasetIamBinding(name, undefined, { urn });
            case "gcp:bigquery/datasetIamMember:DatasetIamMember":
                return new datasetIamMember_1.DatasetIamMember(name, undefined, { urn });
            case "gcp:bigquery/datasetIamPolicy:DatasetIamPolicy":
                return new datasetIamPolicy_1.DatasetIamPolicy(name, undefined, { urn });
            case "gcp:bigquery/iamBinding:IamBinding":
                return new iamBinding_1.IamBinding(name, undefined, { urn });
            case "gcp:bigquery/iamMember:IamMember":
                return new iamMember_1.IamMember(name, undefined, { urn });
            case "gcp:bigquery/iamPolicy:IamPolicy":
                return new iamPolicy_1.IamPolicy(name, undefined, { urn });
            case "gcp:bigquery/job:Job":
                return new job_1.Job(name, undefined, { urn });
            case "gcp:bigquery/reservation:Reservation":
                return new reservation_1.Reservation(name, undefined, { urn });
            case "gcp:bigquery/routine:Routine":
                return new routine_1.Routine(name, undefined, { urn });
            case "gcp:bigquery/table:Table":
                return new table_1.Table(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "bigquery/appProfile", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/connection", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/dataTransferConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/dataset", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/datasetAccess", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/datasetIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/datasetIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/datasetIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/iamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/iamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/iamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/job", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/reservation", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/routine", _module);
pulumi.runtime.registerResourceModule("gcp", "bigquery/table", _module);
//# sourceMappingURL=index.js.map