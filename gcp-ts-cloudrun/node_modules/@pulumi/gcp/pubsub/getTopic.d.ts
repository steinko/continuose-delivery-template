import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Get information about a Google Cloud Pub/Sub Topic. For more information see
 * the [official documentation](https://cloud.google.com/pubsub/docs/)
 * and [API](https://cloud.google.com/pubsub/docs/apis).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_pubsub_topic = pulumi.output(gcp.pubsub.getTopic({
 *     name: "my-pubsub-topic",
 * }, { async: true }));
 * ```
 */
export declare function getTopic(args: GetTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetTopicResult>;
/**
 * A collection of arguments for invoking getTopic.
 */
export interface GetTopicArgs {
    /**
     * The name of the Cloud Pub/Sub Topic.
     */
    readonly name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: string;
}
/**
 * A collection of values returned by getTopic.
 */
export interface GetTopicResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyName: string;
    readonly labels: {
        [key: string]: string;
    };
    readonly messageStoragePolicies: outputs.pubsub.GetTopicMessageStoragePolicy[];
    readonly name: string;
    readonly project?: string;
}
