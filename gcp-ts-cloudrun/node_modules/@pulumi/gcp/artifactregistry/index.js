"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./repository"));
__export(require("./repositoryIamBinding"));
__export(require("./repositoryIamMember"));
__export(require("./repositoryIamPolicy"));
// Import resources to register:
const repository_1 = require("./repository");
const repositoryIamBinding_1 = require("./repositoryIamBinding");
const repositoryIamMember_1 = require("./repositoryIamMember");
const repositoryIamPolicy_1 = require("./repositoryIamPolicy");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:artifactregistry/repository:Repository":
                return new repository_1.Repository(name, undefined, { urn });
            case "gcp:artifactregistry/repositoryIamBinding:RepositoryIamBinding":
                return new repositoryIamBinding_1.RepositoryIamBinding(name, undefined, { urn });
            case "gcp:artifactregistry/repositoryIamMember:RepositoryIamMember":
                return new repositoryIamMember_1.RepositoryIamMember(name, undefined, { urn });
            case "gcp:artifactregistry/repositoryIamPolicy:RepositoryIamPolicy":
                return new repositoryIamPolicy_1.RepositoryIamPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "artifactregistry/repository", _module);
pulumi.runtime.registerResourceModule("gcp", "artifactregistry/repositoryIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "artifactregistry/repositoryIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "artifactregistry/repositoryIamPolicy", _module);
//# sourceMappingURL=index.js.map