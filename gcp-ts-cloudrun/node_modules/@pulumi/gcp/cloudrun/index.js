"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./domainMapping"));
__export(require("./getLocations"));
__export(require("./getService"));
__export(require("./iamBinding"));
__export(require("./iamMember"));
__export(require("./iamPolicy"));
__export(require("./service"));
// Import resources to register:
const domainMapping_1 = require("./domainMapping");
const iamBinding_1 = require("./iamBinding");
const iamMember_1 = require("./iamMember");
const iamPolicy_1 = require("./iamPolicy");
const service_1 = require("./service");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:cloudrun/domainMapping:DomainMapping":
                return new domainMapping_1.DomainMapping(name, undefined, { urn });
            case "gcp:cloudrun/iamBinding:IamBinding":
                return new iamBinding_1.IamBinding(name, undefined, { urn });
            case "gcp:cloudrun/iamMember:IamMember":
                return new iamMember_1.IamMember(name, undefined, { urn });
            case "gcp:cloudrun/iamPolicy:IamPolicy":
                return new iamPolicy_1.IamPolicy(name, undefined, { urn });
            case "gcp:cloudrun/service:Service":
                return new service_1.Service(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "cloudrun/domainMapping", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/iamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "cloudrun/service", _module);
//# sourceMappingURL=index.js.map