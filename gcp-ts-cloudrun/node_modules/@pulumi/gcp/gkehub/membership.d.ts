import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * ## Import
 *
 * Membership can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gkehub/membership:Membership default {{name}}
 * ```
 */
export declare class Membership extends pulumi.CustomResource {
    /**
     * Get an existing Membership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MembershipState, opts?: pulumi.CustomResourceOptions): Membership;
    /**
     * Returns true if the given object is an instance of Membership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Membership;
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    readonly authority: pulumi.Output<outputs.gkehub.MembershipAuthority | undefined>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    readonly endpoint: pulumi.Output<outputs.gkehub.MembershipEndpoint | undefined>;
    /**
     * Labels to apply to this membership.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The client-provided identifier of the membership.
     */
    readonly membershipId: pulumi.Output<string>;
    /**
     * The unique identifier of the membership.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a Membership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MembershipArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Membership resources.
 */
export interface MembershipState {
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    readonly authority?: pulumi.Input<inputs.gkehub.MembershipAuthority>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    readonly endpoint?: pulumi.Input<inputs.gkehub.MembershipEndpoint>;
    /**
     * Labels to apply to this membership.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The client-provided identifier of the membership.
     */
    readonly membershipId?: pulumi.Input<string>;
    /**
     * The unique identifier of the membership.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Membership resource.
 */
export interface MembershipArgs {
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    readonly authority?: pulumi.Input<inputs.gkehub.MembershipAuthority>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    readonly endpoint?: pulumi.Input<inputs.gkehub.MembershipEndpoint>;
    /**
     * Labels to apply to this membership.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The client-provided identifier of the membership.
     */
    readonly membershipId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
