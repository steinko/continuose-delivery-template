"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getRule"));
__export(require("./getTestablePermissions"));
__export(require("./getWorkloadIdentityPool"));
__export(require("./getWorkloadIdentityPoolProvider"));
__export(require("./workloadIdentityPool"));
__export(require("./workloadIdentityPoolProvider"));
// Import resources to register:
const workloadIdentityPool_1 = require("./workloadIdentityPool");
const workloadIdentityPoolProvider_1 = require("./workloadIdentityPoolProvider");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:iam/workloadIdentityPool:WorkloadIdentityPool":
                return new workloadIdentityPool_1.WorkloadIdentityPool(name, undefined, { urn });
            case "gcp:iam/workloadIdentityPoolProvider:WorkloadIdentityPoolProvider":
                return new workloadIdentityPoolProvider_1.WorkloadIdentityPoolProvider(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "iam/workloadIdentityPool", _module);
pulumi.runtime.registerResourceModule("gcp", "iam/workloadIdentityPoolProvider", _module);
//# sourceMappingURL=index.js.map