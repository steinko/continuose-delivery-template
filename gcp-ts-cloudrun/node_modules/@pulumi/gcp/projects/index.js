"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./accessApprovalSettings"));
__export(require("./defaultServiceAccounts"));
__export(require("./getOrganizationPolicy"));
__export(require("./getProject"));
__export(require("./iamauditConfig"));
__export(require("./iambinding"));
__export(require("./iamcustomRole"));
__export(require("./iammember"));
__export(require("./iampolicy"));
__export(require("./organizationPolicy"));
__export(require("./service"));
__export(require("./serviceIdentity"));
__export(require("./usageExportBucket"));
// Import resources to register:
const accessApprovalSettings_1 = require("./accessApprovalSettings");
const defaultServiceAccounts_1 = require("./defaultServiceAccounts");
const iamauditConfig_1 = require("./iamauditConfig");
const iambinding_1 = require("./iambinding");
const iamcustomRole_1 = require("./iamcustomRole");
const iammember_1 = require("./iammember");
const iampolicy_1 = require("./iampolicy");
const organizationPolicy_1 = require("./organizationPolicy");
const service_1 = require("./service");
const serviceIdentity_1 = require("./serviceIdentity");
const usageExportBucket_1 = require("./usageExportBucket");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:projects/accessApprovalSettings:AccessApprovalSettings":
                return new accessApprovalSettings_1.AccessApprovalSettings(name, undefined, { urn });
            case "gcp:projects/defaultServiceAccounts:DefaultServiceAccounts":
                return new defaultServiceAccounts_1.DefaultServiceAccounts(name, undefined, { urn });
            case "gcp:projects/iAMAuditConfig:IAMAuditConfig":
                return new iamauditConfig_1.IAMAuditConfig(name, undefined, { urn });
            case "gcp:projects/iAMBinding:IAMBinding":
                return new iambinding_1.IAMBinding(name, undefined, { urn });
            case "gcp:projects/iAMCustomRole:IAMCustomRole":
                return new iamcustomRole_1.IAMCustomRole(name, undefined, { urn });
            case "gcp:projects/iAMMember:IAMMember":
                return new iammember_1.IAMMember(name, undefined, { urn });
            case "gcp:projects/iAMPolicy:IAMPolicy":
                return new iampolicy_1.IAMPolicy(name, undefined, { urn });
            case "gcp:projects/organizationPolicy:OrganizationPolicy":
                return new organizationPolicy_1.OrganizationPolicy(name, undefined, { urn });
            case "gcp:projects/service:Service":
                return new service_1.Service(name, undefined, { urn });
            case "gcp:projects/serviceIdentity:ServiceIdentity":
                return new serviceIdentity_1.ServiceIdentity(name, undefined, { urn });
            case "gcp:projects/usageExportBucket:UsageExportBucket":
                return new usageExportBucket_1.UsageExportBucket(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "projects/accessApprovalSettings", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/defaultServiceAccounts", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/iAMAuditConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/iAMBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/iAMCustomRole", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/iAMMember", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/iAMPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/organizationPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/service", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/serviceIdentity", _module);
pulumi.runtime.registerResourceModule("gcp", "projects/usageExportBucket", _module);
//# sourceMappingURL=index.js.map