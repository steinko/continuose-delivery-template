import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A game server cluster resource.
 *
 * To get more information about GameServerCluster, see:
 *
 * * [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.realms.gameServerClusters)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/game-servers/docs)
 *
 * ## Example Usage
 * ### Game Service Cluster Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultGameServerCluster = new gcp.gameservices.GameServerCluster("default", {
 *     clusterId: "",
 *     "google_game_services_realm.default.realm_id": [{
 *         connectionInfo: [{
 *             gkeClusterReference: [{
 *                 cluster: "locations/us-west1/clusters/%{agones_cluster}",
 *             }],
 *             namespace: "default",
 *         }],
 *     }],
 *     realmId: "",
 * });
 * const defaultRealm = new gcp.gameservices.Realm("default", {
 *     description: "Test Game Realm",
 *     realmId: "realm",
 *     timeZone: "PST8PDT",
 * });
 * ```
 *
 * ## Import
 *
 * GameServerCluster can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerCluster:GameServerCluster default projects/{{project}}/locations/{{location}}/realms/{{realm_id}}/gameServerClusters/{{cluster_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerCluster:GameServerCluster default {{project}}/{{location}}/{{realm_id}}/{{cluster_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerCluster:GameServerCluster default {{location}}/{{realm_id}}/{{cluster_id}}
 * ```
 */
export declare class GameServerCluster extends pulumi.CustomResource {
    /**
     * Get an existing GameServerCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GameServerClusterState, opts?: pulumi.CustomResourceOptions): GameServerCluster;
    /**
     * Returns true if the given object is an instance of GameServerCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GameServerCluster;
    /**
     * Required. The resource name of the game server cluster
     */
    readonly clusterId: pulumi.Output<string>;
    /**
     * Game server cluster connection information. This information is used to
     * manage game server clusters.
     * Structure is documented below.
     */
    readonly connectionInfo: pulumi.Output<outputs.gameservices.GameServerClusterConnectionInfo>;
    /**
     * Human readable description of the cluster.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The labels associated with this game server cluster. Each label is a
     * key-value pair.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Location of the Cluster.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The resource id of the game server cluster, eg:
     * 'projects/{project_id}/locations/{location}/realms/{realm_id}/gameServerClusters/{cluster_id}'. For example,
     * 'projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster'.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The realm id of the game server realm.
     */
    readonly realmId: pulumi.Output<string>;
    /**
     * Create a GameServerCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GameServerClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GameServerCluster resources.
 */
export interface GameServerClusterState {
    /**
     * Required. The resource name of the game server cluster
     */
    readonly clusterId?: pulumi.Input<string>;
    /**
     * Game server cluster connection information. This information is used to
     * manage game server clusters.
     * Structure is documented below.
     */
    readonly connectionInfo?: pulumi.Input<inputs.gameservices.GameServerClusterConnectionInfo>;
    /**
     * Human readable description of the cluster.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The labels associated with this game server cluster. Each label is a
     * key-value pair.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the Cluster.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The resource id of the game server cluster, eg:
     * 'projects/{project_id}/locations/{location}/realms/{realm_id}/gameServerClusters/{cluster_id}'. For example,
     * 'projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster'.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The realm id of the game server realm.
     */
    readonly realmId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GameServerCluster resource.
 */
export interface GameServerClusterArgs {
    /**
     * Required. The resource name of the game server cluster
     */
    readonly clusterId: pulumi.Input<string>;
    /**
     * Game server cluster connection information. This information is used to
     * manage game server clusters.
     * Structure is documented below.
     */
    readonly connectionInfo: pulumi.Input<inputs.gameservices.GameServerClusterConnectionInfo>;
    /**
     * Human readable description of the cluster.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The labels associated with this game server cluster. Each label is a
     * key-value pair.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the Cluster.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The realm id of the game server realm.
     */
    readonly realmId: pulumi.Input<string>;
}
