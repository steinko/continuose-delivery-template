import * as pulumi from "@pulumi/pulumi";
/**
 * A game server deployment resource.
 *
 * To get more information about GameServerDeployment, see:
 *
 * * [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.gameServerDeployments)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/game-servers/docs)
 *
 * ## Example Usage
 * ### Game Service Deployment Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultGameServerDeployment = new gcp.gameservices.GameServerDeployment("default", {
 *     deploymentId: "tf-test-deployment",
 *     description: "a deployment description",
 * });
 * ```
 *
 * ## Import
 *
 * GameServerDeployment can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeployment:GameServerDeployment default projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeployment:GameServerDeployment default {{project}}/{{location}}/{{deployment_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerDeployment:GameServerDeployment default {{location}}/{{deployment_id}}
 * ```
 */
export declare class GameServerDeployment extends pulumi.CustomResource {
    /**
     * Get an existing GameServerDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GameServerDeploymentState, opts?: pulumi.CustomResourceOptions): GameServerDeployment;
    /**
     * Returns true if the given object is an instance of GameServerDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GameServerDeployment;
    /**
     * A unique id for the deployment.
     */
    readonly deploymentId: pulumi.Output<string>;
    /**
     * Human readable description of the game server deployment.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The labels associated with this game server deployment. Each label is a
     * key-value pair.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Location of the Deployment.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The resource id of the game server deployment, eg:
     * 'projects/{project_id}/locations/{location}/gameServerDeployments/{deployment_id}'. For example,
     * 'projects/my-project/locations/{location}/gameServerDeployments/my-deployment'.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a GameServerDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GameServerDeploymentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GameServerDeployment resources.
 */
export interface GameServerDeploymentState {
    /**
     * A unique id for the deployment.
     */
    readonly deploymentId?: pulumi.Input<string>;
    /**
     * Human readable description of the game server deployment.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The labels associated with this game server deployment. Each label is a
     * key-value pair.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the Deployment.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The resource id of the game server deployment, eg:
     * 'projects/{project_id}/locations/{location}/gameServerDeployments/{deployment_id}'. For example,
     * 'projects/my-project/locations/{location}/gameServerDeployments/my-deployment'.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a GameServerDeployment resource.
 */
export interface GameServerDeploymentArgs {
    /**
     * A unique id for the deployment.
     */
    readonly deploymentId: pulumi.Input<string>;
    /**
     * Human readable description of the game server deployment.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The labels associated with this game server deployment. Each label is a
     * key-value pair.
     */
    readonly labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the Deployment.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
