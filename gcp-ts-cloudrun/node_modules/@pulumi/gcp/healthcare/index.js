"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./consentStore"));
__export(require("./consentStoreIamBinding"));
__export(require("./consentStoreIamMember"));
__export(require("./consentStoreIamPolicy"));
__export(require("./dataset"));
__export(require("./datasetIamBinding"));
__export(require("./datasetIamMember"));
__export(require("./datasetIamPolicy"));
__export(require("./dicomStore"));
__export(require("./dicomStoreIamBinding"));
__export(require("./dicomStoreIamMember"));
__export(require("./dicomStoreIamPolicy"));
__export(require("./fhirStore"));
__export(require("./fhirStoreIamBinding"));
__export(require("./fhirStoreIamMember"));
__export(require("./fhirStoreIamPolicy"));
__export(require("./hl7Store"));
__export(require("./hl7StoreIamBinding"));
__export(require("./hl7StoreIamMember"));
__export(require("./hl7StoreIamPolicy"));
// Import resources to register:
const consentStore_1 = require("./consentStore");
const consentStoreIamBinding_1 = require("./consentStoreIamBinding");
const consentStoreIamMember_1 = require("./consentStoreIamMember");
const consentStoreIamPolicy_1 = require("./consentStoreIamPolicy");
const dataset_1 = require("./dataset");
const datasetIamBinding_1 = require("./datasetIamBinding");
const datasetIamMember_1 = require("./datasetIamMember");
const datasetIamPolicy_1 = require("./datasetIamPolicy");
const dicomStore_1 = require("./dicomStore");
const dicomStoreIamBinding_1 = require("./dicomStoreIamBinding");
const dicomStoreIamMember_1 = require("./dicomStoreIamMember");
const dicomStoreIamPolicy_1 = require("./dicomStoreIamPolicy");
const fhirStore_1 = require("./fhirStore");
const fhirStoreIamBinding_1 = require("./fhirStoreIamBinding");
const fhirStoreIamMember_1 = require("./fhirStoreIamMember");
const fhirStoreIamPolicy_1 = require("./fhirStoreIamPolicy");
const hl7Store_1 = require("./hl7Store");
const hl7StoreIamBinding_1 = require("./hl7StoreIamBinding");
const hl7StoreIamMember_1 = require("./hl7StoreIamMember");
const hl7StoreIamPolicy_1 = require("./hl7StoreIamPolicy");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:healthcare/consentStore:ConsentStore":
                return new consentStore_1.ConsentStore(name, undefined, { urn });
            case "gcp:healthcare/consentStoreIamBinding:ConsentStoreIamBinding":
                return new consentStoreIamBinding_1.ConsentStoreIamBinding(name, undefined, { urn });
            case "gcp:healthcare/consentStoreIamMember:ConsentStoreIamMember":
                return new consentStoreIamMember_1.ConsentStoreIamMember(name, undefined, { urn });
            case "gcp:healthcare/consentStoreIamPolicy:ConsentStoreIamPolicy":
                return new consentStoreIamPolicy_1.ConsentStoreIamPolicy(name, undefined, { urn });
            case "gcp:healthcare/dataset:Dataset":
                return new dataset_1.Dataset(name, undefined, { urn });
            case "gcp:healthcare/datasetIamBinding:DatasetIamBinding":
                return new datasetIamBinding_1.DatasetIamBinding(name, undefined, { urn });
            case "gcp:healthcare/datasetIamMember:DatasetIamMember":
                return new datasetIamMember_1.DatasetIamMember(name, undefined, { urn });
            case "gcp:healthcare/datasetIamPolicy:DatasetIamPolicy":
                return new datasetIamPolicy_1.DatasetIamPolicy(name, undefined, { urn });
            case "gcp:healthcare/dicomStore:DicomStore":
                return new dicomStore_1.DicomStore(name, undefined, { urn });
            case "gcp:healthcare/dicomStoreIamBinding:DicomStoreIamBinding":
                return new dicomStoreIamBinding_1.DicomStoreIamBinding(name, undefined, { urn });
            case "gcp:healthcare/dicomStoreIamMember:DicomStoreIamMember":
                return new dicomStoreIamMember_1.DicomStoreIamMember(name, undefined, { urn });
            case "gcp:healthcare/dicomStoreIamPolicy:DicomStoreIamPolicy":
                return new dicomStoreIamPolicy_1.DicomStoreIamPolicy(name, undefined, { urn });
            case "gcp:healthcare/fhirStore:FhirStore":
                return new fhirStore_1.FhirStore(name, undefined, { urn });
            case "gcp:healthcare/fhirStoreIamBinding:FhirStoreIamBinding":
                return new fhirStoreIamBinding_1.FhirStoreIamBinding(name, undefined, { urn });
            case "gcp:healthcare/fhirStoreIamMember:FhirStoreIamMember":
                return new fhirStoreIamMember_1.FhirStoreIamMember(name, undefined, { urn });
            case "gcp:healthcare/fhirStoreIamPolicy:FhirStoreIamPolicy":
                return new fhirStoreIamPolicy_1.FhirStoreIamPolicy(name, undefined, { urn });
            case "gcp:healthcare/hl7Store:Hl7Store":
                return new hl7Store_1.Hl7Store(name, undefined, { urn });
            case "gcp:healthcare/hl7StoreIamBinding:Hl7StoreIamBinding":
                return new hl7StoreIamBinding_1.Hl7StoreIamBinding(name, undefined, { urn });
            case "gcp:healthcare/hl7StoreIamMember:Hl7StoreIamMember":
                return new hl7StoreIamMember_1.Hl7StoreIamMember(name, undefined, { urn });
            case "gcp:healthcare/hl7StoreIamPolicy:Hl7StoreIamPolicy":
                return new hl7StoreIamPolicy_1.Hl7StoreIamPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "healthcare/consentStore", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/consentStoreIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/consentStoreIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/consentStoreIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/dataset", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/datasetIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/datasetIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/datasetIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/dicomStore", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/dicomStoreIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/dicomStoreIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/dicomStoreIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/fhirStore", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/fhirStoreIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/fhirStoreIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/fhirStoreIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/hl7Store", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/hl7StoreIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/hl7StoreIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "healthcare/hl7StoreIamPolicy", _module);
//# sourceMappingURL=index.js.map