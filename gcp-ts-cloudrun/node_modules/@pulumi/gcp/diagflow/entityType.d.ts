import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Represents an entity type. Entity types serve as a tool for extracting parameter values from natural language queries.
 *
 * To get more information about EntityType, see:
 *
 * * [API documentation](https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.entityTypes)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/docs/)
 *
 * ## Example Usage
 * ### Dialogflow Entity Type Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicAgent = new gcp.diagflow.Agent("basicAgent", {
 *     displayName: "example_agent",
 *     defaultLanguageCode: "en",
 *     timeZone: "America/New_York",
 * });
 * const basicEntityType = new gcp.diagflow.EntityType("basicEntityType", {
 *     displayName: "",
 *     kind: "KIND_MAP",
 *     entities: [
 *         {
 *             value: "value1",
 *             synonyms: [
 *                 "synonym1",
 *                 "synonym2",
 *             ],
 *         },
 *         {
 *             value: "value2",
 *             synonyms: [
 *                 "synonym3",
 *                 "synonym4",
 *             ],
 *         },
 *     ],
 * }, {
 *     dependsOn: [basicAgent],
 * });
 * ```
 *
 * ## Import
 *
 * EntityType can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:diagflow/entityType:EntityType default {{name}}
 * ```
 */
export declare class EntityType extends pulumi.CustomResource {
    /**
     * Get an existing EntityType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntityTypeState, opts?: pulumi.CustomResourceOptions): EntityType;
    /**
     * Returns true if the given object is an instance of EntityType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EntityType;
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Enables fuzzy entity extraction during classification.
     */
    readonly enableFuzzyExtraction: pulumi.Output<boolean | undefined>;
    /**
     * The collection of entity entries associated with the entity type.
     * Structure is documented below.
     */
    readonly entities: pulumi.Output<outputs.diagflow.EntityTypeEntity[] | undefined>;
    /**
     * Indicates the kind of entity type.
     * * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference value.
     * * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
     * types can contain references to other entity types (with or without aliases).
     * * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
     * Possible values are `KIND_MAP`, `KIND_LIST`, and `KIND_REGEXP`.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a EntityType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EntityTypeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EntityType resources.
 */
export interface EntityTypeState {
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Enables fuzzy entity extraction during classification.
     */
    readonly enableFuzzyExtraction?: pulumi.Input<boolean>;
    /**
     * The collection of entity entries associated with the entity type.
     * Structure is documented below.
     */
    readonly entities?: pulumi.Input<pulumi.Input<inputs.diagflow.EntityTypeEntity>[]>;
    /**
     * Indicates the kind of entity type.
     * * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference value.
     * * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
     * types can contain references to other entity types (with or without aliases).
     * * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
     * Possible values are `KIND_MAP`, `KIND_LIST`, and `KIND_REGEXP`.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EntityType resource.
 */
export interface EntityTypeArgs {
    /**
     * The name of this entity type to be displayed on the console.
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * Enables fuzzy entity extraction during classification.
     */
    readonly enableFuzzyExtraction?: pulumi.Input<boolean>;
    /**
     * The collection of entity entries associated with the entity type.
     * Structure is documented below.
     */
    readonly entities?: pulumi.Input<pulumi.Input<inputs.diagflow.EntityTypeEntity>[]>;
    /**
     * Indicates the kind of entity type.
     * * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference value.
     * * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
     * types can contain references to other entity types (with or without aliases).
     * * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
     * Possible values are `KIND_MAP`, `KIND_LIST`, and `KIND_REGEXP`.
     */
    readonly kind: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
