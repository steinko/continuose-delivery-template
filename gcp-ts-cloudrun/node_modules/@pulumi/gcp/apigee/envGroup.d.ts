import * as pulumi from "@pulumi/pulumi";
/**
 * An `Environment group` in Apigee.
 *
 * To get more information about Envgroup, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/create)
 * * How-to Guides
 *     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Envgroup can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:apigee/envGroup:EnvGroup default {{org_id}}/envgroups/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:apigee/envGroup:EnvGroup default {{org_id}}/{{name}}
 * ```
 */
export declare class EnvGroup extends pulumi.CustomResource {
    /**
     * Get an existing EnvGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvGroupState, opts?: pulumi.CustomResourceOptions): EnvGroup;
    /**
     * Returns true if the given object is an instance of EnvGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnvGroup;
    /**
     * Hostnames of the environment group.
     */
    readonly hostnames: pulumi.Output<string[] | undefined>;
    /**
     * The resource ID of the environment group.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    readonly orgId: pulumi.Output<string>;
    /**
     * Create a EnvGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnvGroup resources.
 */
export interface EnvGroupState {
    /**
     * Hostnames of the environment group.
     */
    readonly hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the environment group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    readonly orgId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnvGroup resource.
 */
export interface EnvGroupArgs {
    /**
     * Hostnames of the environment group.
     */
    readonly hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the environment group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    readonly orgId: pulumi.Input<string>;
}
