import * as pulumi from "@pulumi/pulumi";
/**
 * An `Organization` is the top-level container in Apigee.
 *
 * To get more information about Organization, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations)
 * * How-to Guides
 *     * [Creating an API organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)
 *
 * ## Example Usage
 * ### Apigee Organization Cloud Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * const apigeeNetwork = new gcp.compute.Network("apigeeNetwork", {});
 * const apigeeRange = new gcp.compute.GlobalAddress("apigeeRange", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: apigeeNetwork.id,
 * });
 * const apigeeVpcConnection = new gcp.servicenetworking.Connection("apigeeVpcConnection", {
 *     network: apigeeNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [apigeeRange.name],
 * });
 * const org = new gcp.apigee.Organization("org", {
 *     analyticsRegion: "us-central1",
 *     projectId: current.then(current => current.project),
 *     authorizedNetwork: apigeeNetwork.id,
 * }, {
 *     dependsOn: [apigeeVpcConnection],
 * });
 * ```
 * ### Apigee Organization Cloud Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * const apigeeNetwork = new gcp.compute.Network("apigeeNetwork", {});
 * const apigeeRange = new gcp.compute.GlobalAddress("apigeeRange", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: apigeeNetwork.id,
 * });
 * const apigeeVpcConnection = new gcp.servicenetworking.Connection("apigeeVpcConnection", {
 *     network: apigeeNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [apigeeRange.name],
 * });
 * const apigeeKeyring = new gcp.kms.KeyRing("apigeeKeyring", {location: "us-central1"});
 * const apigeeKey = new gcp.kms.CryptoKey("apigeeKey", {keyRing: apigeeKeyring.id});
 * const apigeeSa = new gcp.projects.ServiceIdentity("apigeeSa", {
 *     project: google_project.project.project_id,
 *     service: google_project_service.apigee.service,
 * }, {
 *     provider: google_beta,
 * });
 * const apigeeSaKeyuser = new gcp.kms.CryptoKeyIAMBinding("apigeeSaKeyuser", {
 *     cryptoKeyId: apigeeKey.id,
 *     role: "roles/cloudkms.cryptoKeyEncrypterDecrypter",
 *     members: [pulumi.interpolate`serviceAccount:${apigeeSa.email}`],
 * });
 * const org = new gcp.apigee.Organization("org", {
 *     analyticsRegion: "us-central1",
 *     displayName: "apigee-org",
 *     description: "Auto-provisioned Apigee Org.",
 *     projectId: current.then(current => current.project),
 *     authorizedNetwork: apigeeNetwork.id,
 *     runtimeDatabaseEncryptionKeyName: apigeeKey.id,
 * }, {
 *     dependsOn: [
 *         apigeeVpcConnection,
 *         apigeeSaKeyuser,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Organization can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:apigee/organization:Organization default organizations/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:apigee/organization:Organization default {{name}}
 * ```
 */
export declare class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationState, opts?: pulumi.CustomResourceOptions): Organization;
    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Organization;
    /**
     * Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     */
    readonly analyticsRegion: pulumi.Output<string | undefined>;
    /**
     * Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
     * See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started).
     * Valid only when `RuntimeType` is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
     */
    readonly authorizedNetwork: pulumi.Output<string | undefined>;
    /**
     * Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when 'RuntimeType'
     * is CLOUD. A base64-encoded string.
     */
    readonly caCertificate: pulumi.Output<string>;
    /**
     * Description of the Apigee organization.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the Apigee organization.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Output only. Name of the Apigee organization.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The project ID associated with the Apigee organization.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
     * Update is not allowed after the organization is created.
     * If not specified, a Google-Managed encryption key will be used.
     * Valid only when `RuntimeType` is CLOUD. For example: `projects/foo/locations/us/keyRings/bar/cryptoKeys/baz`.
     */
    readonly runtimeDatabaseEncryptionKeyName: pulumi.Output<string | undefined>;
    /**
     * Runtime type of the Apigee organization based on the Apigee subscription purchased.
     * Default value is `CLOUD`.
     * Possible values are `CLOUD` and `HYBRID`.
     */
    readonly runtimeType: pulumi.Output<string | undefined>;
    /**
     * Output only. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation
     * purposes only) or paid (full subscription has been purchased).
     */
    readonly subscriptionType: pulumi.Output<string>;
    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Organization resources.
 */
export interface OrganizationState {
    /**
     * Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     */
    readonly analyticsRegion?: pulumi.Input<string>;
    /**
     * Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
     * See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started).
     * Valid only when `RuntimeType` is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
     */
    readonly authorizedNetwork?: pulumi.Input<string>;
    /**
     * Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when 'RuntimeType'
     * is CLOUD. A base64-encoded string.
     */
    readonly caCertificate?: pulumi.Input<string>;
    /**
     * Description of the Apigee organization.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name of the Apigee organization.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Output only. Name of the Apigee organization.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The project ID associated with the Apigee organization.
     */
    readonly projectId?: pulumi.Input<string>;
    /**
     * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
     * Update is not allowed after the organization is created.
     * If not specified, a Google-Managed encryption key will be used.
     * Valid only when `RuntimeType` is CLOUD. For example: `projects/foo/locations/us/keyRings/bar/cryptoKeys/baz`.
     */
    readonly runtimeDatabaseEncryptionKeyName?: pulumi.Input<string>;
    /**
     * Runtime type of the Apigee organization based on the Apigee subscription purchased.
     * Default value is `CLOUD`.
     * Possible values are `CLOUD` and `HYBRID`.
     */
    readonly runtimeType?: pulumi.Input<string>;
    /**
     * Output only. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation
     * purposes only) or paid (full subscription has been purchased).
     */
    readonly subscriptionType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
    /**
     * Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     */
    readonly analyticsRegion?: pulumi.Input<string>;
    /**
     * Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
     * See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started).
     * Valid only when `RuntimeType` is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
     */
    readonly authorizedNetwork?: pulumi.Input<string>;
    /**
     * Description of the Apigee organization.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name of the Apigee organization.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The project ID associated with the Apigee organization.
     */
    readonly projectId: pulumi.Input<string>;
    /**
     * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
     * Update is not allowed after the organization is created.
     * If not specified, a Google-Managed encryption key will be used.
     * Valid only when `RuntimeType` is CLOUD. For example: `projects/foo/locations/us/keyRings/bar/cryptoKeys/baz`.
     */
    readonly runtimeDatabaseEncryptionKeyName?: pulumi.Input<string>;
    /**
     * Runtime type of the Apigee organization based on the Apigee subscription purchased.
     * Default value is `CLOUD`.
     * Possible values are `CLOUD` and `HYBRID`.
     */
    readonly runtimeType?: pulumi.Input<string>;
}
