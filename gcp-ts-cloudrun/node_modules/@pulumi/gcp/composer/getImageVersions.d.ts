import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Provides access to available Cloud Composer versions in a region for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const all = gcp.composer.getImageVersions({});
 * const test = new gcp.composer.Environment("test", {
 *     region: "us-central1",
 *     config: {
 *         softwareConfig: {
 *             imageVersion: all.then(all => all.imageVersions[0].imageVersionId),
 *         },
 *     },
 * });
 * ```
 */
export declare function getImageVersions(args?: GetImageVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetImageVersionsResult>;
/**
 * A collection of arguments for invoking getImageVersions.
 */
export interface GetImageVersionsArgs {
    /**
     * The ID of the project to list versions in.
     * If it is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The location to list versions in.
     * If it is not provider, the provider region is used.
     */
    readonly region?: string;
}
/**
 * A collection of values returned by getImageVersions.
 */
export interface GetImageVersionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of composer image versions available in the given project and location. Each `imageVersion` contains:
     */
    readonly imageVersions: outputs.composer.GetImageVersionsImageVersion[];
    readonly project: string;
    readonly region: string;
}
