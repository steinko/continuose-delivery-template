import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
/**
 * ## Import
 *
 * Docker service can be imported using the long id, e.g. for a service with the short id `55ba873dd`
 *
 * ```sh
 *  $ pulumi import docker:index/service:Service foo $(docker service inspect -f {{.ID}} 55b)
 * ```
 */
export declare class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceState, opts?: pulumi.CustomResourceOptions): Service;
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Service;
    /**
     * See Auth below for details.
     */
    readonly auth: pulumi.Output<outputs.ServiceAuth | undefined>;
    /**
     * See Converge Config below for details.
     */
    readonly convergeConfig: pulumi.Output<outputs.ServiceConvergeConfig | undefined>;
    /**
     * See EndpointSpec below for details.
     */
    readonly endpointSpec: pulumi.Output<outputs.ServiceEndpointSpec>;
    /**
     * See Labels below for details.
     */
    readonly labels: pulumi.Output<outputs.ServiceLabel[]>;
    /**
     * See Mode below for details.
     */
    readonly mode: pulumi.Output<outputs.ServiceMode>;
    /**
     * The name of the Docker service.
     */
    readonly name: pulumi.Output<string>;
    /**
     * See RollbackConfig below for details.
     */
    readonly rollbackConfig: pulumi.Output<outputs.ServiceRollbackConfig | undefined>;
    /**
     * See TaskSpec below for details.
     */
    readonly taskSpec: pulumi.Output<outputs.ServiceTaskSpec>;
    /**
     * See UpdateConfig below for details.
     */
    readonly updateConfig: pulumi.Output<outputs.ServiceUpdateConfig | undefined>;
    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Service resources.
 */
export interface ServiceState {
    /**
     * See Auth below for details.
     */
    readonly auth?: pulumi.Input<inputs.ServiceAuth>;
    /**
     * See Converge Config below for details.
     */
    readonly convergeConfig?: pulumi.Input<inputs.ServiceConvergeConfig>;
    /**
     * See EndpointSpec below for details.
     */
    readonly endpointSpec?: pulumi.Input<inputs.ServiceEndpointSpec>;
    /**
     * See Labels below for details.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.ServiceLabel>[]>;
    /**
     * See Mode below for details.
     */
    readonly mode?: pulumi.Input<inputs.ServiceMode>;
    /**
     * The name of the Docker service.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * See RollbackConfig below for details.
     */
    readonly rollbackConfig?: pulumi.Input<inputs.ServiceRollbackConfig>;
    /**
     * See TaskSpec below for details.
     */
    readonly taskSpec?: pulumi.Input<inputs.ServiceTaskSpec>;
    /**
     * See UpdateConfig below for details.
     */
    readonly updateConfig?: pulumi.Input<inputs.ServiceUpdateConfig>;
}
/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * See Auth below for details.
     */
    readonly auth?: pulumi.Input<inputs.ServiceAuth>;
    /**
     * See Converge Config below for details.
     */
    readonly convergeConfig?: pulumi.Input<inputs.ServiceConvergeConfig>;
    /**
     * See EndpointSpec below for details.
     */
    readonly endpointSpec?: pulumi.Input<inputs.ServiceEndpointSpec>;
    /**
     * See Labels below for details.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.ServiceLabel>[]>;
    /**
     * See Mode below for details.
     */
    readonly mode?: pulumi.Input<inputs.ServiceMode>;
    /**
     * The name of the Docker service.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * See RollbackConfig below for details.
     */
    readonly rollbackConfig?: pulumi.Input<inputs.ServiceRollbackConfig>;
    /**
     * See TaskSpec below for details.
     */
    readonly taskSpec: pulumi.Input<inputs.ServiceTaskSpec>;
    /**
     * See UpdateConfig below for details.
     */
    readonly updateConfig?: pulumi.Input<inputs.ServiceUpdateConfig>;
}
