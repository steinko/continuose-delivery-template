default:
  image: openjdk:15

  
stages:
  - integration-test
  - build-image
  - provide-infrastructure
  - acceptance-test

integration-test:
  stage: integration-test
  script:
    - ./gradlew check

infrastructure-unit-test:
  stage: integration-test
  image: ubuntu
  script:
    - chmod +x ./infAsCode/scripts/*.sh
    - infAsCode/scripts/npm-install.sh
    - cd  infAsCode
    - npm test
    - cd ..



assemble-artefact:
  stage: integration-test
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - ./app/build/libs/app.jar 


build-image:
   image: ubuntu
   stage: build-image
   script:
     - apt update -y
     - apt upgrade -y
     - apt install apt-transport-https  ca-certificates curl gnupg lsb-release -y
     - apt install curl -y
     - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
     - echo  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null
     - apt update -y
     - export tzdata=Europe/OSLO
     - export DEBIAN_FRONTEND=noninteractive
     - ln -snf /usr/share/zoneinfo/$tzdata /etc/localtime && echo $tzdata > /etc/timezone
     - apt update -y
     - apt install docker-ce docker-ce-cli containerd.io -y tzdata
     - service docker start
     - service docker status
     - docker run hello-world
     - export DOCKER_CLI_EXPERIMENTAL=enabled
     - docker buildx install
     - docker run --privileged --rm tonistiigi/binfmt --install all 
     - docker context create node-amd64  --from default
     - docker context create node-arm64  --from default
     - docker buildx create --use --name mybuild node-amd64 
     - docker buildx create --append --name mybuild node-arm64
     - docker login -u steinko -p RoxyMusic11
     - docker buildx build --platform linux/amd64 --push -t steinko/gradle-ci-cd .

provide-infrastructure:
   image: ubuntu
   stage: provide-infrastructure
   before_script:
    - chmod +x ./infAsCode/scripts/*.sh
    - ./infAsCode/scripts/setup.sh
   script:
    - ./infAsCode/scripts/run-pulumi.sh
   

acceptance-test:
  image: gradle
  stage: acceptance-test
  
  script:
    - cd ./acceptanceTest
    - gradle cucumber
  
 
