default:
  image: openjdk:15
 
stages:
  - continuose-intgeration
  - build-image
  - test-infrastructure-provision
  - test-deployment-test
  - test-acceptance-test
  - test-infrastructure-destruction
  - production-infrastructure-provision
  - production-deployment-test
  - production-acceptance-test
  - production-infrastructure-destruction

 
backend-integration-test:
  stage: continuose-intgeration
  script:
    - ./gradlew check

backend-generate-code-coverage:
  stage: continuose-intgeration
  script:
    - ./gradlew jacocoTestReport

backend-generate-java-doc:
  stage: continuose-intgeration
  script:
    - ./gradlew javadoc

backend-check-code-quality:
  stage: continuose-intgeration
  script:
    - ./gradlew sonarqube

frontend-integration-test:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - npm install
    - npm run test -- --coverage --watchAll=false
    - cd ..

frontend-lint:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - npm install
    - npm run lint
    - cd ..

backend-assemble-artefact:
  stage: continuose-intgeration
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - ./app/build/libs/app.jar 

build-image:
    stage: build-image
    image: docker:dind
    script:
     - docker login -u steiko -p "$DOCKER_PASSWORD"
     - docker buildx create --name mybuilder
     - docker buildx use mybuilder
     - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t steinko/helloworld . --push

provide-infrastructure-test:
   image: pulumi/pulumi-nodejs
   
   stage: test-infrastructure-provision
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select test
    - pulumi up -y
    - cd ..
   environment:
    name: test

test-deployment-test:
    image: node
    stage: test-deployment-test
    script:
      - cd infAsCodeIntTest
      - npm install
      - npm test
      - cd ..

test-functional-acceptance-test:
  image: gradle
  stage: test-acceptance-test
  
  script:
    - cd ./acceptanceTest
    - gradle cucumber
    - cd ..


destroy-test-infrastructure:
   image: pulumi/pulumi-nodejs
   stage: test-infrastructure-destruction
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select test
    - pulumi destroy -y
    - cd ..

provide-infrastructure-production:
   image: pulumi/pulumi-nodejs
   stage: production-infrastructure-provision
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select production
    - pulumi up -y
    - cd ..
   environment:
    name: production

production-deployment-test:
    image: node
    stage: production-deployment-test
    script:
      - cd infAsCodeIntTest
      - npm install
      - npm test
      - cd ..

production-functional-acceptance-test:
  image: gradle
  stage: production-acceptance-test
  
  script:
    - cd ./acceptanceTest
    - gradle cucumber
    - cd ..


destroy-infrastructure-production:
   image: pulumi/pulumi-nodejs
   stage: production-infrastructure-destruction
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select production
    - pulumi destroy -y
    - cd ..