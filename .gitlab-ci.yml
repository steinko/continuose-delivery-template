default:
  image: openjdk:15

 
stages:
  - continuose-intgeration
  - deploy-frontened
  
 
backend-integration-test:
  stage: continuose-intgeration
  image: gradle:alpine
  script:
    - cd backend
    - gradle check
    - cd ..

backend-generate-code-coverage:
  stage: continuose-intgeration
  image: gradle:alpine
  script:
    - cd backend
    - gradle jacocoTestReport
    - cd ..

backend-generate-java-doc:
  stage: continuose-intgeration
  image: gradle:alpine
  script:
    - cd backend
    - gradle javadoc
    - cd ..

backend-check-code-quality:
  stage: continuose-intgeration
  image: gradle:alpine
  script:
    - cd backend
    - gradle sonarqube
    - cd ..

frontend-integration-test:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - export  REACT_APP_BACKEND_URL=http://localhost:8000
    - export  REACT_APP_USE_MSW=true
    - npm install
    - npm test -- --watchAll=false
    - cd ..
  artifacts:
    reports:
      junit: junit.xml
      cobertura: coverage/cobertura-coverage.xml


frontend-lint:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - npm install
    - npm run lint
    - cd ..



deploy-frontend:
  image: node
  stage: deploy-frontend
  script:
    - cd frontend
    - npm i
    - npm run build
    - npm install -g serverless
    - 'serverless config credentials --provider "aws" --key "$AWS_ACCESS_KEY_ID" --secret "$AWS_SECRET_ACCESS_KEY"'
    - serverless client deploy --no-confirm --use-local-credentials
    - export CYPRESS_HOST=http://frontend-template.s3-website-us-east-1.amazonaws.com
    - export REACT_APP_BACKEND_URL=http://backend-template.s3-website-us-east-1.amazonaws.com
    - npm run cypress:run
