default:
  image: openjdk:15
 
stages:
  - continuose-intgeration
  - infrastructure-provision
  - acceptance-test
  - infrastructure-destruction

 
backend-integration-test:
  stage: continuose-intgeration
  script:
    - ./gradlew chec

backend-generate-code-coverage:
  stage: continuose-intgeration
  script:
    - ./gradlew jacocoTestReport

backend-generate-java-doc:
  stage: continuose-intgeration
  script:
    - ./gradlew javadoc

backend-check-code-quality:
  stage: continuose-intgeration
  script:
    - ./gradlew sonarqube

frontend-integration-test:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - npm install
    - npm run test -- --coverage --watchAll=false
    - cd ..

frontend-lint:
  stage: continuose-intgeration
  image: node
  before_script:
    - cd frontend
  script:
    - npm install
    - npm run lint
    - cd ..

backend-assemble-artefact:
  stage: continuose-intgeration
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - ./app/build/libs/app.jar 


   
provide-infrastructure:
   image: pulumi/pulumi-nodejs
   
   stage: infrastructure-provision
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - export aws_access_key_id="$AWS_ACCESS_KEY_ID"
    - export aws_secret_access_key="$AWS_SECRET_ACCESS_KEY"
    - export aws_default_region="$AWS_DEFAULT_REGION"
    - printenv
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - cd ..
   environment:
    name: staging
    url: http://dev-app.eu-north-1.elasticbeanstalk.com



functional_acceptance-test:
  image: gradle
  stage: acceptance-test
  
  script:
    - cd ./acceptanceTest
    - gradle cucumber
    - cd ..

preformence_acceptance-test:
  image: blazemeter/taurus
  stage: acceptance-test
  script:
    - docker run -it --rm -v /performancetests:/bzt-configs blazemeter/taurus bzt basicscenario.yml
    


  
destroy-infrastructure:
   image: pulumi/pulumi-nodejs
   stage: infrastructure-destruction
   script:
    - cd deploymentaws
    - npm install
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - export aws_access_key_id="$AWS_ACCESS_KEY_ID"
    - export aws_secret_access_key="$AWS_SECRET_ACCESS_KEY"
    - export aws_default_region="$AWS_DEFAULT_REGION"
    - printenv
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ..
 
